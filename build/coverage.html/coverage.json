{"/home/travis/build/npmtest/node-npmtest-twemoji/test.js":{"path":"/home/travis/build/npmtest/node-npmtest-twemoji/test.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":1,"12":1,"13":1,"14":1,"15":2,"16":2,"17":2,"18":2,"19":1,"20":1,"21":2,"22":2,"23":2,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1,"38":1,"39":2,"40":2,"41":1,"42":2,"43":2,"44":1,"45":2,"46":2,"47":1,"48":2,"49":2,"50":1,"51":1,"52":1,"53":1,"54":1},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[1,1],"5":[1,1],"6":[1,1],"7":[1,1],"8":[1,1],"9":[1,1],"10":[1,1,1],"11":[1,1],"12":[1,1],"13":[1,1],"14":[1,1],"15":[1,1],"16":[1,1],"17":[1,1]},"f":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":1},"end":{"line":12,"column":13}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":5},"end":{"line":19,"column":17}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":24},"end":{"line":23,"column":36}}},"4":{"name":"(anonymous_4)","line":61,"loc":{"start":{"line":61,"column":5},"end":{"line":61,"column":17}}},"5":{"name":"(anonymous_5)","line":82,"loc":{"start":{"line":82,"column":5},"end":{"line":82,"column":17}}},"6":{"name":"(anonymous_6)","line":91,"loc":{"start":{"line":91,"column":77},"end":{"line":94,"column":10}}},"7":{"name":"(anonymous_7)","line":112,"loc":{"start":{"line":112,"column":83},"end":{"line":115,"column":10}},"skip":true},"8":{"name":"(anonymous_8)","line":123,"loc":{"start":{"line":123,"column":77},"end":{"line":126,"column":10}},"skip":true},"9":{"name":"(anonymous_9)","line":139,"loc":{"start":{"line":139,"column":12},"end":{"line":139,"column":40}},"skip":true},"10":{"name":"(anonymous_10)","line":147,"loc":{"start":{"line":147,"column":77},"end":{"line":150,"column":10}},"skip":true},"11":{"name":"(anonymous_11)","line":158,"loc":{"start":{"line":158,"column":83},"end":{"line":161,"column":10}},"skip":true},"12":{"name":"(anonymous_12)","line":169,"loc":{"start":{"line":169,"column":79},"end":{"line":172,"column":10}},"skip":true},"13":{"name":"(anonymous_13)","line":180,"loc":{"start":{"line":180,"column":75},"end":{"line":183,"column":10}},"skip":true}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":195,"column":5}},"2":{"start":{"line":14,"column":4},"end":{"line":14,"column":14}},"3":{"start":{"line":19,"column":4},"end":{"line":56,"column":9}},"4":{"start":{"line":21,"column":8},"end":{"line":21,"column":19}},"5":{"start":{"line":23,"column":8},"end":{"line":35,"column":13}},"6":{"start":{"line":24,"column":12},"end":{"line":34,"column":13}},"7":{"start":{"line":25,"column":16},"end":{"line":28,"column":30}},"8":{"start":{"line":30,"column":16},"end":{"line":33,"column":27}},"9":{"start":{"line":37,"column":8},"end":{"line":39,"column":21}},"10":{"start":{"line":40,"column":8},"end":{"line":53,"column":9}},"11":{"start":{"line":43,"column":12},"end":{"line":46,"column":14}},"12":{"start":{"line":47,"column":12},"end":{"line":47,"column":18}},"13":{"start":{"line":50,"column":12},"end":{"line":51,"column":33}},"14":{"start":{"line":52,"column":12},"end":{"line":52,"column":18}},"15":{"start":{"line":55,"column":8},"end":{"line":55,"column":35}},"16":{"start":{"line":61,"column":4},"end":{"line":63,"column":9}},"17":{"start":{"line":62,"column":8},"end":{"line":62,"column":15}},"18":{"start":{"line":64,"column":4},"end":{"line":77,"column":5}},"19":{"start":{"line":70,"column":8},"end":{"line":70,"column":14}},"20":{"start":{"line":76,"column":8},"end":{"line":76,"column":14}},"21":{"start":{"line":82,"column":4},"end":{"line":84,"column":9}},"22":{"start":{"line":83,"column":8},"end":{"line":83,"column":15}},"23":{"start":{"line":85,"column":4},"end":{"line":194,"column":5}},"24":{"start":{"line":91,"column":8},"end":{"line":99,"column":10}},"25":{"start":{"line":98,"column":12},"end":{"line":98,"column":35}},"26":{"start":{"line":102,"column":8},"end":{"line":104,"column":63}},"27":{"start":{"line":105,"column":8},"end":{"line":105,"column":14}},"28":{"start":{"line":112,"column":8},"end":{"line":121,"column":10},"skip":true},"29":{"start":{"line":119,"column":12},"end":{"line":119,"column":55},"skip":true},"30":{"start":{"line":120,"column":12},"end":{"line":120,"column":48},"skip":true},"31":{"start":{"line":123,"column":8},"end":{"line":136,"column":10},"skip":true},"32":{"start":{"line":130,"column":12},"end":{"line":130,"column":76},"skip":true},"33":{"start":{"line":131,"column":12},"end":{"line":131,"column":73},"skip":true},"34":{"start":{"line":132,"column":12},"end":{"line":132,"column":74},"skip":true},"35":{"start":{"line":133,"column":12},"end":{"line":133,"column":79},"skip":true},"36":{"start":{"line":134,"column":12},"end":{"line":134,"column":25},"skip":true},"37":{"start":{"line":135,"column":12},"end":{"line":135,"column":45},"skip":true},"38":{"start":{"line":138,"column":8},"end":{"line":145,"column":14},"skip":true},"39":{"start":{"line":143,"column":16},"end":{"line":143,"column":29},"skip":true},"40":{"start":{"line":144,"column":16},"end":{"line":144,"column":55},"skip":true},"41":{"start":{"line":147,"column":8},"end":{"line":156,"column":10},"skip":true},"42":{"start":{"line":154,"column":12},"end":{"line":154,"column":25},"skip":true},"43":{"start":{"line":155,"column":12},"end":{"line":155,"column":45},"skip":true},"44":{"start":{"line":158,"column":8},"end":{"line":167,"column":10},"skip":true},"45":{"start":{"line":165,"column":12},"end":{"line":165,"column":25},"skip":true},"46":{"start":{"line":166,"column":12},"end":{"line":166,"column":48},"skip":true},"47":{"start":{"line":169,"column":8},"end":{"line":178,"column":10},"skip":true},"48":{"start":{"line":176,"column":12},"end":{"line":176,"column":25},"skip":true},"49":{"start":{"line":177,"column":12},"end":{"line":177,"column":46},"skip":true},"50":{"start":{"line":180,"column":8},"end":{"line":189,"column":10},"skip":true},"51":{"start":{"line":187,"column":12},"end":{"line":187,"column":94},"skip":true},"52":{"start":{"line":188,"column":12},"end":{"line":188,"column":48},"skip":true},"53":{"start":{"line":192,"column":8},"end":{"line":192,"column":35},"skip":true},"54":{"start":{"line":193,"column":8},"end":{"line":193,"column":14},"skip":true}},"branchMap":{"1":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":62}},{"start":{"line":26,"column":20},"end":{"line":26,"column":70}},{"start":{"line":27,"column":20},"end":{"line":27,"column":71}},{"start":{"line":28,"column":20},"end":{"line":28,"column":29}}]},"2":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":23},"end":{"line":30,"column":37}},{"start":{"line":31,"column":20},"end":{"line":31,"column":61}},{"start":{"line":32,"column":20},"end":{"line":32,"column":70}},{"start":{"line":33,"column":20},"end":{"line":33,"column":26}}]},"3":{"line":37,"type":"cond-expr","locations":[{"start":{"line":38,"column":14},"end":{"line":38,"column":20}},{"start":{"line":39,"column":14},"end":{"line":39,"column":20}}]},"4":{"line":40,"type":"switch","locations":[{"start":{"line":42,"column":8},"end":{"line":47,"column":18}},{"start":{"line":49,"column":8},"end":{"line":52,"column":18}}]},"5":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":16},"end":{"line":44,"column":44}},{"start":{"line":44,"column":48},"end":{"line":44,"column":66}}]},"6":{"line":50,"type":"binary-expr","locations":[{"start":{"line":50,"column":21},"end":{"line":50,"column":49}},{"start":{"line":50,"column":53},"end":{"line":50,"column":72}}]},"7":{"line":64,"type":"switch","locations":[{"start":{"line":69,"column":4},"end":{"line":70,"column":14}},{"start":{"line":75,"column":4},"end":{"line":76,"column":14}}]},"8":{"line":85,"type":"switch","locations":[{"start":{"line":90,"column":4},"end":{"line":105,"column":14}},{"start":{"line":111,"column":4},"end":{"line":193,"column":14},"skip":true}]},"9":{"line":91,"type":"binary-expr","locations":[{"start":{"line":91,"column":42},"end":{"line":91,"column":73}},{"start":{"line":91,"column":77},"end":{"line":99,"column":9}}]},"10":{"line":102,"type":"binary-expr","locations":[{"start":{"line":102,"column":18},"end":{"line":102,"column":32}},{"start":{"line":103,"column":12},"end":{"line":103,"column":53}},{"start":{"line":104,"column":12},"end":{"line":104,"column":61}}]},"11":{"line":112,"type":"binary-expr","locations":[{"start":{"line":112,"column":45},"end":{"line":112,"column":79},"skip":true},{"start":{"line":112,"column":83},"end":{"line":121,"column":9},"skip":true}]},"12":{"line":123,"type":"binary-expr","locations":[{"start":{"line":123,"column":42},"end":{"line":123,"column":73},"skip":true},{"start":{"line":123,"column":77},"end":{"line":136,"column":9},"skip":true}]},"13":{"line":138,"type":"binary-expr","locations":[{"start":{"line":138,"column":48},"end":{"line":138,"column":85},"skip":true},{"start":{"line":139,"column":12},"end":{"line":145,"column":13},"skip":true}]},"14":{"line":147,"type":"binary-expr","locations":[{"start":{"line":147,"column":42},"end":{"line":147,"column":73},"skip":true},{"start":{"line":147,"column":77},"end":{"line":156,"column":9},"skip":true}]},"15":{"line":158,"type":"binary-expr","locations":[{"start":{"line":158,"column":45},"end":{"line":158,"column":79},"skip":true},{"start":{"line":158,"column":83},"end":{"line":167,"column":9},"skip":true}]},"16":{"line":169,"type":"binary-expr","locations":[{"start":{"line":169,"column":43},"end":{"line":169,"column":75},"skip":true},{"start":{"line":169,"column":79},"end":{"line":178,"column":9},"skip":true}]},"17":{"line":180,"type":"binary-expr","locations":[{"start":{"line":180,"column":41},"end":{"line":180,"column":71},"skip":true},{"start":{"line":180,"column":75},"end":{"line":189,"column":9},"skip":true}]}},"code":["/* istanbul instrument in package npmtest_twemoji */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        switch (local.modeJs) {","        // re-init local from window.local","        case 'browser':","            local = local.global.utility2.objectSetDefault(","                local.global.utility2_rollup || local.global.local,","                local.global.utility2","            );","            break;","        // re-init local from example.js","        case 'node':","            local = (local.global.utility2_rollup || require('utility2'))","                .requireReadme();","            break;","        }","        // export local","        local.global.local = local;","    }());","","","","    // run shared js-env code - function","    (function () {","        return;","    }());","    switch (local.modeJs) {","","","","    // run browser js-env code - function","    case 'browser':","        break;","","","","    // run node js-env code - function","    case 'node':","        break;","    }","","","","    // run shared js-env code - post-init","    (function () {","        return;","    }());","    switch (local.modeJs) {","","","","    // run browser js-env code - post-init","    case 'browser':","        local.testCase_browser_nullCase = local.testCase_browser_nullCase || function (","            options,","            onError","        ) {","        /*","         * this function will test browsers's null-case handling-behavior-behavior","         */","            onError(null, options);","        };","","        // run tests","        local.nop(local.modeTest &&","            document.querySelector('#testRunButton1') &&","            document.querySelector('#testRunButton1').click());","        break;","","","","    // run node js-env code - post-init","    /* istanbul ignore next */","    case 'node':","        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildApidoc's default handling-behavior-behavior","         */","            options = { modulePathList: module.paths };","            local.buildApidoc(options, onError);","        };","","        local.testCase_buildApp_default = local.testCase_buildApp_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildApp's default handling-behavior-behavior","         */","            local.testCase_buildReadme_default(options, local.onErrorThrow);","            local.testCase_buildLib_default(options, local.onErrorThrow);","            local.testCase_buildTest_default(options, local.onErrorThrow);","            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);","            options = [];","            local.buildApp(options, onError);","        };","","        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||","            function (options, onError) {","            /*","             * this function will test buildCustomOrg's default handling-behavior","             */","                options = {};","                local.buildCustomOrg(options, onError);","            };","","        local.testCase_buildLib_default = local.testCase_buildLib_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildLib's default handling-behavior","         */","            options = {};","            local.buildLib(options, onError);","        };","","        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildReadme's default handling-behavior-behavior","         */","            options = {};","            local.buildReadme(options, onError);","        };","","        local.testCase_buildTest_default = local.testCase_buildTest_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildTest's default handling-behavior","         */","            options = {};","            local.buildTest(options, onError);","        };","","        local.testCase_webpage_default = local.testCase_webpage_default || function (","            options,","            onError","        ) {","        /*","         * this function will test webpage's default handling-behavior","         */","            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };","            local.browserTest(options, onError);","        };","","        // run test-server","        local.testRunServer(local);","        break;","    }","}());",""],"l":{"12":2,"14":2,"19":2,"21":2,"23":2,"24":2,"25":2,"30":1,"37":2,"40":2,"43":1,"47":1,"50":1,"52":1,"55":2,"61":2,"62":2,"64":2,"70":1,"76":1,"82":2,"83":2,"85":2,"91":1,"98":1,"102":1,"105":1,"112":1,"119":1,"120":1,"123":1,"130":1,"131":1,"132":1,"133":1,"134":1,"135":1,"138":1,"143":2,"144":2,"147":1,"154":2,"155":2,"158":1,"165":2,"166":2,"169":1,"176":2,"177":2,"180":1,"187":1,"188":1,"192":1,"193":1}},"/home/travis/build/npmtest/node-npmtest-twemoji/lib.npmtest_twemoji.js":{"path":"/home/travis/build/npmtest/node-npmtest-twemoji/lib.npmtest_twemoji.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1,"14":1,"15":1,"16":1},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[2,2],"5":[1,1]},"f":{"1":2,"2":2,"3":2},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":1},"end":{"line":12,"column":13}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":5},"end":{"line":19,"column":17}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":24},"end":{"line":23,"column":36}}}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":53,"column":5}},"2":{"start":{"line":14,"column":4},"end":{"line":14,"column":14}},"3":{"start":{"line":19,"column":4},"end":{"line":52,"column":9}},"4":{"start":{"line":21,"column":8},"end":{"line":21,"column":19}},"5":{"start":{"line":23,"column":8},"end":{"line":35,"column":13}},"6":{"start":{"line":24,"column":12},"end":{"line":34,"column":13}},"7":{"start":{"line":25,"column":16},"end":{"line":28,"column":30}},"8":{"start":{"line":30,"column":16},"end":{"line":33,"column":27}},"9":{"start":{"line":37,"column":8},"end":{"line":39,"column":21}},"10":{"start":{"line":41,"column":8},"end":{"line":41,"column":54}},"11":{"start":{"line":43,"column":8},"end":{"line":43,"column":52}},"12":{"start":{"line":45,"column":8},"end":{"line":51,"column":9}},"13":{"start":{"line":46,"column":12},"end":{"line":46,"column":58}},"14":{"start":{"line":48,"column":12},"end":{"line":48,"column":35}},"15":{"start":{"line":49,"column":12},"end":{"line":49,"column":49}},"16":{"start":{"line":50,"column":12},"end":{"line":50,"column":43}}},"branchMap":{"1":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":62}},{"start":{"line":26,"column":20},"end":{"line":26,"column":70}},{"start":{"line":27,"column":20},"end":{"line":27,"column":71}},{"start":{"line":28,"column":20},"end":{"line":28,"column":29}}]},"2":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":23},"end":{"line":30,"column":37}},{"start":{"line":31,"column":20},"end":{"line":31,"column":61}},{"start":{"line":32,"column":20},"end":{"line":32,"column":70}},{"start":{"line":33,"column":20},"end":{"line":33,"column":26}}]},"3":{"line":37,"type":"cond-expr","locations":[{"start":{"line":38,"column":14},"end":{"line":38,"column":20}},{"start":{"line":39,"column":14},"end":{"line":39,"column":20}}]},"4":{"line":41,"type":"binary-expr","locations":[{"start":{"line":41,"column":16},"end":{"line":41,"column":44}},{"start":{"line":41,"column":48},"end":{"line":41,"column":53}}]},"5":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":8},"end":{"line":45,"column":8}},{"start":{"line":45,"column":8},"end":{"line":45,"column":8}}]}},"code":["/* istanbul instrument in package npmtest_twemoji */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        // init utility2_rollup","        local = local.global.utility2_rollup || local;","        // init lib","        local.local = local.npmtest_twemoji = local;","        // init exports","        if (local.modeJs === 'browser') {","            local.global.utility2_npmtest_twemoji = local;","        } else {","            module.exports = local;","            module.exports.__dirname = __dirname;","            module.exports.module = module;","        }","    }());","}());",""],"l":{"12":2,"14":2,"19":2,"21":2,"23":2,"24":2,"25":2,"30":1,"37":2,"41":2,"43":2,"45":2,"46":1,"48":1,"49":1,"50":1}},"/home/travis/build/npmtest/node-npmtest-twemoji/example.js":{"path":"/home/travis/build/npmtest/node-npmtest-twemoji/example.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1,"14":2,"15":2,"16":2,"17":2,"18":2,"19":0,"20":2,"21":1,"22":1,"23":1,"24":1,"25":1,"26":0,"27":0,"28":1,"29":1,"30":2,"31":0,"32":0,"33":0,"34":1,"35":2,"36":2,"37":3,"38":3,"39":3,"40":3,"41":0,"42":3,"43":3,"44":3,"45":1,"46":3,"47":1,"48":1,"49":1,"50":1,"51":1,"52":1,"53":1,"54":1,"55":1,"56":1,"57":0,"58":1,"59":6,"60":6,"61":1,"62":2,"63":0,"64":2,"65":1,"66":1,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[2,2],"5":[1,1],"6":[1,1],"7":[2,0],"8":[2,1,1,1,1,1],"9":[0,2,0],"10":[1,1],"11":[2,1,1],"12":[1,0],"13":[0,2],"14":[2,0,0,0,0,0,0],"15":[0,3],"16":[3,0],"17":[1,1],"18":[0,1],"19":[1,2,0,2],"20":[1,0],"21":[1,1],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0]},"f":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":3,"8":3,"9":3,"10":1,"11":6,"12":0},"fnMap":{"1":{"name":"(anonymous_1)","line":26,"loc":{"start":{"line":26,"column":1},"end":{"line":26,"column":13}}},"2":{"name":"(anonymous_2)","line":33,"loc":{"start":{"line":33,"column":5},"end":{"line":33,"column":17}}},"3":{"name":"(anonymous_3)","line":37,"loc":{"start":{"line":37,"column":24},"end":{"line":37,"column":36}}},"4":{"name":"(anonymous_4)","line":69,"loc":{"start":{"line":69,"column":31},"end":{"line":69,"column":48}},"skip":true},"5":{"name":"(anonymous_5)","line":78,"loc":{"start":{"line":78,"column":26},"end":{"line":78,"column":45}},"skip":true},"6":{"name":"(anonymous_6)","line":123,"loc":{"start":{"line":123,"column":33},"end":{"line":123,"column":48}},"skip":true},"7":{"name":"(anonymous_7)","line":125,"loc":{"start":{"line":125,"column":27},"end":{"line":125,"column":39}},"skip":true},"8":{"name":"(anonymous_8)","line":133,"loc":{"start":{"line":133,"column":59},"end":{"line":133,"column":74}},"skip":true},"9":{"name":"(anonymous_9)","line":143,"loc":{"start":{"line":143,"column":45},"end":{"line":143,"column":62}},"skip":true},"10":{"name":"(anonymous_10)","line":144,"loc":{"start":{"line":144,"column":73},"end":{"line":144,"column":92}},"skip":true},"11":{"name":"(anonymous_11)","line":272,"loc":{"start":{"line":272,"column":51},"end":{"line":272,"column":77}},"skip":true},"12":{"name":"(anonymous_12)","line":315,"loc":{"start":{"line":315,"column":32},"end":{"line":315,"column":61}},"skip":true}},"statementMap":{"1":{"start":{"line":26,"column":0},"end":{"line":326,"column":5}},"2":{"start":{"line":28,"column":4},"end":{"line":28,"column":14}},"3":{"start":{"line":33,"column":4},"end":{"line":60,"column":9}},"4":{"start":{"line":35,"column":8},"end":{"line":35,"column":19}},"5":{"start":{"line":37,"column":8},"end":{"line":49,"column":13}},"6":{"start":{"line":38,"column":12},"end":{"line":48,"column":13}},"7":{"start":{"line":39,"column":16},"end":{"line":42,"column":30}},"8":{"start":{"line":44,"column":16},"end":{"line":47,"column":27}},"9":{"start":{"line":51,"column":8},"end":{"line":53,"column":21}},"10":{"start":{"line":55,"column":8},"end":{"line":57,"column":45}},"11":{"start":{"line":59,"column":8},"end":{"line":59,"column":35}},"12":{"start":{"line":61,"column":4},"end":{"line":325,"column":5}},"13":{"start":{"line":69,"column":8},"end":{"line":121,"column":10},"skip":true},"14":{"start":{"line":70,"column":12},"end":{"line":88,"column":13},"skip":true},"15":{"start":{"line":76,"column":16},"end":{"line":87,"column":19},"skip":true},"16":{"start":{"line":79,"column":20},"end":{"line":86,"column":21},"skip":true},"17":{"start":{"line":82,"column":24},"end":{"line":82,"column":43},"skip":true},"18":{"start":{"line":83,"column":24},"end":{"line":83,"column":30},"skip":true},"19":{"start":{"line":85,"column":24},"end":{"line":85,"column":49},"skip":true},"20":{"start":{"line":89,"column":12},"end":{"line":107,"column":13},"skip":true},"21":{"start":{"line":92,"column":16},"end":{"line":102,"column":17},"skip":true},"22":{"start":{"line":93,"column":20},"end":{"line":93,"column":86},"skip":true},"23":{"start":{"line":94,"column":20},"end":{"line":95,"column":45},"skip":true},"24":{"start":{"line":96,"column":20},"end":{"line":96,"column":42},"skip":true},"25":{"start":{"line":97,"column":20},"end":{"line":97,"column":48},"skip":true},"26":{"start":{"line":100,"column":20},"end":{"line":100,"column":85},"skip":true},"27":{"start":{"line":101,"column":20},"end":{"line":101,"column":96},"skip":true},"28":{"start":{"line":103,"column":16},"end":{"line":103,"column":22},"skip":true},"29":{"start":{"line":106,"column":16},"end":{"line":106,"column":22},"skip":true},"30":{"start":{"line":108,"column":12},"end":{"line":120,"column":13},"skip":true},"31":{"start":{"line":114,"column":16},"end":{"line":119,"column":17},"skip":true},"32":{"start":{"line":116,"column":20},"end":{"line":116,"column":78},"skip":true},"33":{"start":{"line":118,"column":20},"end":{"line":118,"column":47},"skip":true},"34":{"start":{"line":123,"column":8},"end":{"line":141,"column":11},"skip":true},"35":{"start":{"line":124,"column":12},"end":{"line":124,"column":54},"skip":true},"36":{"start":{"line":125,"column":12},"end":{"line":140,"column":14},"skip":true},"37":{"start":{"line":126,"column":16},"end":{"line":126,"column":28},"skip":true},"38":{"start":{"line":127,"column":16},"end":{"line":127,"column":69},"skip":true},"39":{"start":{"line":128,"column":16},"end":{"line":128,"column":75},"skip":true},"40":{"start":{"line":129,"column":16},"end":{"line":131,"column":17},"skip":true},"41":{"start":{"line":130,"column":20},"end":{"line":130,"column":27},"skip":true},"42":{"start":{"line":133,"column":16},"end":{"line":137,"column":36},"skip":true},"43":{"start":{"line":134,"column":20},"end":{"line":136,"column":55},"skip":true},"44":{"start":{"line":139,"column":16},"end":{"line":139,"column":57},"skip":true},"45":{"start":{"line":143,"column":8},"end":{"line":147,"column":11},"skip":true},"46":{"start":{"line":144,"column":12},"end":{"line":146,"column":15},"skip":true},"47":{"start":{"line":145,"column":16},"end":{"line":145,"column":70},"skip":true},"48":{"start":{"line":149,"column":8},"end":{"line":149,"column":31},"skip":true},"49":{"start":{"line":150,"column":8},"end":{"line":150,"column":14},"skip":true},"50":{"start":{"line":158,"column":8},"end":{"line":158,"column":31},"skip":true},"51":{"start":{"line":160,"column":8},"end":{"line":160,"column":33},"skip":true},"52":{"start":{"line":161,"column":8},"end":{"line":161,"column":37},"skip":true},"53":{"start":{"line":162,"column":8},"end":{"line":162,"column":35},"skip":true},"54":{"start":{"line":164,"column":8},"end":{"line":164,"column":50},"skip":true},"55":{"start":{"line":166,"column":8},"end":{"line":256,"column":2},"skip":true},"56":{"start":{"line":258,"column":8},"end":{"line":286,"column":9},"skip":true},"57":{"start":{"line":259,"column":12},"end":{"line":269,"column":14},"skip":true},"58":{"start":{"line":271,"column":12},"end":{"line":285,"column":19},"skip":true},"59":{"start":{"line":274,"column":20},"end":{"line":274,"column":35},"skip":true},"60":{"start":{"line":275,"column":20},"end":{"line":284,"column":21},"skip":true},"61":{"start":{"line":277,"column":24},"end":{"line":277,"column":64},"skip":true},"62":{"start":{"line":279,"column":24},"end":{"line":279,"column":40},"skip":true},"63":{"start":{"line":281,"column":24},"end":{"line":281,"column":40},"skip":true},"64":{"start":{"line":283,"column":24},"end":{"line":283,"column":39},"skip":true},"65":{"start":{"line":288,"column":8},"end":{"line":290,"column":9},"skip":true},"66":{"start":{"line":289,"column":12},"end":{"line":289,"column":18},"skip":true},"67":{"start":{"line":291,"column":8},"end":{"line":293,"column":54},"skip":true},"68":{"start":{"line":296,"column":8},"end":{"line":301,"column":37},"skip":true},"69":{"start":{"line":303,"column":8},"end":{"line":303,"column":82},"skip":true},"70":{"start":{"line":306,"column":8},"end":{"line":308,"column":9},"skip":true},"71":{"start":{"line":307,"column":12},"end":{"line":307,"column":82},"skip":true},"72":{"start":{"line":310,"column":8},"end":{"line":312,"column":9},"skip":true},"73":{"start":{"line":311,"column":12},"end":{"line":311,"column":18},"skip":true},"74":{"start":{"line":313,"column":8},"end":{"line":313,"column":54},"skip":true},"75":{"start":{"line":314,"column":8},"end":{"line":314,"column":69},"skip":true},"76":{"start":{"line":315,"column":8},"end":{"line":323,"column":36},"skip":true},"77":{"start":{"line":316,"column":12},"end":{"line":316,"column":61},"skip":true},"78":{"start":{"line":317,"column":12},"end":{"line":320,"column":13},"skip":true},"79":{"start":{"line":318,"column":16},"end":{"line":318,"column":75},"skip":true},"80":{"start":{"line":319,"column":16},"end":{"line":319,"column":23},"skip":true},"81":{"start":{"line":321,"column":12},"end":{"line":321,"column":38},"skip":true},"82":{"start":{"line":322,"column":12},"end":{"line":322,"column":27},"skip":true},"83":{"start":{"line":324,"column":8},"end":{"line":324,"column":14},"skip":true}},"branchMap":{"1":{"line":39,"type":"binary-expr","locations":[{"start":{"line":39,"column":23},"end":{"line":39,"column":62}},{"start":{"line":40,"column":20},"end":{"line":40,"column":70}},{"start":{"line":41,"column":20},"end":{"line":41,"column":71}},{"start":{"line":42,"column":20},"end":{"line":42,"column":29}}]},"2":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":23},"end":{"line":44,"column":37}},{"start":{"line":45,"column":20},"end":{"line":45,"column":61}},{"start":{"line":46,"column":20},"end":{"line":46,"column":70}},{"start":{"line":47,"column":20},"end":{"line":47,"column":26}}]},"3":{"line":51,"type":"cond-expr","locations":[{"start":{"line":52,"column":14},"end":{"line":52,"column":20}},{"start":{"line":53,"column":14},"end":{"line":53,"column":20}}]},"4":{"line":55,"type":"binary-expr","locations":[{"start":{"line":55,"column":16},"end":{"line":55,"column":44}},{"start":{"line":55,"column":49},"end":{"line":57,"column":43}}]},"5":{"line":55,"type":"cond-expr","locations":[{"start":{"line":56,"column":14},"end":{"line":56,"column":51}},{"start":{"line":57,"column":14},"end":{"line":57,"column":43}}]},"6":{"line":61,"type":"switch","locations":[{"start":{"line":68,"column":4},"end":{"line":150,"column":14},"skip":true},{"start":{"line":156,"column":4},"end":{"line":324,"column":14},"skip":true}]},"7":{"line":70,"type":"if","locations":[{"start":{"line":70,"column":12},"end":{"line":70,"column":12},"skip":true},{"start":{"line":70,"column":12},"end":{"line":70,"column":12},"skip":true}]},"8":{"line":70,"type":"binary-expr","locations":[{"start":{"line":70,"column":16},"end":{"line":70,"column":22},"skip":true},{"start":{"line":70,"column":27},"end":{"line":70,"column":32},"skip":true},{"start":{"line":71,"column":20},"end":{"line":71,"column":39},"skip":true},{"start":{"line":72,"column":20},"end":{"line":72,"column":49},"skip":true},{"start":{"line":73,"column":20},"end":{"line":73,"column":58},"skip":true},{"start":{"line":74,"column":20},"end":{"line":74,"column":69},"skip":true}]},"9":{"line":79,"type":"switch","locations":[{"start":{"line":80,"column":20},"end":{"line":80,"column":33},"skip":true},{"start":{"line":81,"column":20},"end":{"line":83,"column":30},"skip":true},{"start":{"line":84,"column":20},"end":{"line":85,"column":49},"skip":true}]},"10":{"line":89,"type":"switch","locations":[{"start":{"line":90,"column":12},"end":{"line":103,"column":22},"skip":true},{"start":{"line":105,"column":12},"end":{"line":106,"column":22},"skip":true}]},"11":{"line":89,"type":"binary-expr","locations":[{"start":{"line":89,"column":20},"end":{"line":89,"column":25},"skip":true},{"start":{"line":89,"column":29},"end":{"line":89,"column":48},"skip":true},{"start":{"line":89,"column":52},"end":{"line":89,"column":74},"skip":true}]},"12":{"line":92,"type":"if","locations":[{"start":{"line":92,"column":16},"end":{"line":92,"column":16},"skip":true},{"start":{"line":92,"column":16},"end":{"line":92,"column":16},"skip":true}]},"13":{"line":108,"type":"if","locations":[{"start":{"line":108,"column":12},"end":{"line":108,"column":12},"skip":true},{"start":{"line":108,"column":12},"end":{"line":108,"column":12},"skip":true}]},"14":{"line":108,"type":"binary-expr","locations":[{"start":{"line":108,"column":16},"end":{"line":108,"column":61},"skip":true},{"start":{"line":108,"column":66},"end":{"line":108,"column":72},"skip":true},{"start":{"line":108,"column":77},"end":{"line":108,"column":82},"skip":true},{"start":{"line":109,"column":20},"end":{"line":109,"column":39},"skip":true},{"start":{"line":110,"column":20},"end":{"line":110,"column":49},"skip":true},{"start":{"line":111,"column":20},"end":{"line":111,"column":58},"skip":true},{"start":{"line":112,"column":20},"end":{"line":112,"column":68},"skip":true}]},"15":{"line":129,"type":"if","locations":[{"start":{"line":129,"column":16},"end":{"line":129,"column":16},"skip":true},{"start":{"line":129,"column":16},"end":{"line":129,"column":16},"skip":true}]},"16":{"line":134,"type":"cond-expr","locations":[{"start":{"line":135,"column":26},"end":{"line":135,"column":29},"skip":true},{"start":{"line":136,"column":26},"end":{"line":136,"column":54},"skip":true}]},"17":{"line":164,"type":"binary-expr","locations":[{"start":{"line":164,"column":27},"end":{"line":164,"column":43},"skip":true},{"start":{"line":164,"column":47},"end":{"line":164,"column":49},"skip":true}]},"18":{"line":258,"type":"if","locations":[{"start":{"line":258,"column":8},"end":{"line":258,"column":8},"skip":true},{"start":{"line":258,"column":8},"end":{"line":258,"column":8},"skip":true}]},"19":{"line":275,"type":"switch","locations":[{"start":{"line":276,"column":20},"end":{"line":277,"column":64},"skip":true},{"start":{"line":278,"column":20},"end":{"line":279,"column":40},"skip":true},{"start":{"line":280,"column":20},"end":{"line":281,"column":40},"skip":true},{"start":{"line":282,"column":20},"end":{"line":283,"column":39},"skip":true}]},"20":{"line":288,"type":"if","locations":[{"start":{"line":288,"column":8},"end":{"line":288,"column":8},"skip":true},{"start":{"line":288,"column":8},"end":{"line":288,"column":8},"skip":true}]},"21":{"line":288,"type":"binary-expr","locations":[{"start":{"line":288,"column":12},"end":{"line":288,"column":40},"skip":true},{"start":{"line":288,"column":44},"end":{"line":288,"column":67},"skip":true}]},"22":{"line":292,"type":"binary-expr","locations":[{"start":{"line":292,"column":12},"end":{"line":292,"column":50},"skip":true},{"start":{"line":293,"column":12},"end":{"line":293,"column":53},"skip":true}]},"23":{"line":297,"type":"binary-expr","locations":[{"start":{"line":297,"column":12},"end":{"line":297,"column":65},"skip":true},{"start":{"line":298,"column":12},"end":{"line":301,"column":36},"skip":true}]},"24":{"line":303,"type":"binary-expr","locations":[{"start":{"line":303,"column":43},"end":{"line":303,"column":75},"skip":true},{"start":{"line":303,"column":79},"end":{"line":303,"column":81},"skip":true}]},"25":{"line":306,"type":"if","locations":[{"start":{"line":306,"column":8},"end":{"line":306,"column":8},"skip":true},{"start":{"line":306,"column":8},"end":{"line":306,"column":8},"skip":true}]},"26":{"line":310,"type":"if","locations":[{"start":{"line":310,"column":8},"end":{"line":310,"column":8},"skip":true},{"start":{"line":310,"column":8},"end":{"line":310,"column":8},"skip":true}]},"27":{"line":313,"type":"binary-expr","locations":[{"start":{"line":313,"column":27},"end":{"line":313,"column":43},"skip":true},{"start":{"line":313,"column":47},"end":{"line":313,"column":53},"skip":true}]},"28":{"line":317,"type":"if","locations":[{"start":{"line":317,"column":12},"end":{"line":317,"column":12},"skip":true},{"start":{"line":317,"column":12},"end":{"line":317,"column":12},"skip":true}]}},"code":["/*","example.js","","quickstart example","","instruction","    1. save this script as example.js","    2. run the shell command:","        $ npm install npmtest-twemoji && PORT=8081 node example.js","    3. play with the browser-demo on http://127.0.0.1:8081","*/","","","","/* istanbul instrument in package npmtest_twemoji */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        // init utility2_rollup","        local = local.global.utility2_rollup || (local.modeJs === 'browser'","            ? local.global.utility2_npmtest_twemoji","            : global.utility2_moduleExports);","        // export local","        local.global.local = local;","    }());","    switch (local.modeJs) {","","","","    // post-init","    // run browser js-env code - post-init","    /* istanbul ignore next */","    case 'browser':","        local.testRunBrowser = function (event) {","            if (!event || (event &&","                    event.currentTarget &&","                    event.currentTarget.className &&","                    event.currentTarget.className.includes &&","                    event.currentTarget.className.includes('onreset'))) {","                // reset output","                Array.from(","                    document.querySelectorAll('body > .resettable')","                ).forEach(function (element) {","                    switch (element.tagName) {","                    case 'INPUT':","                    case 'TEXTAREA':","                        element.value = '';","                        break;","                    default:","                        element.textContent = '';","                    }","                });","            }","            switch (event && event.currentTarget && event.currentTarget.id) {","            case 'testRunButton1':","                // show tests","                if (document.querySelector('#testReportDiv1').style.display === 'none') {","                    document.querySelector('#testReportDiv1').style.display = 'block';","                    document.querySelector('#testRunButton1').textContent =","                        'hide internal test';","                    local.modeTest = true;","                    local.testRunDefault(local);","                // hide tests","                } else {","                    document.querySelector('#testReportDiv1').style.display = 'none';","                    document.querySelector('#testRunButton1').textContent = 'run internal test';","                }","                break;","            // custom-case","            default:","                break;","            }","            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&","                    event.currentTarget &&","                    event.currentTarget.className &&","                    event.currentTarget.className.includes &&","                    event.currentTarget.className.includes('oneval')))) {","                // try to eval input-code","                try {","                    /*jslint evil: true*/","                    eval(document.querySelector('#inputTextareaEval1').value);","                } catch (errorCaught) {","                    console.error(errorCaught);","                }","            }","        };","        // log stderr and stdout to #outputTextareaStdout1","        ['error', 'log'].forEach(function (key) {","            console[key + '_original'] = console[key];","            console[key] = function () {","                var element;","                console[key + '_original'].apply(console, arguments);","                element = document.querySelector('#outputTextareaStdout1');","                if (!element) {","                    return;","                }","                // append text to #outputTextareaStdout1","                element.value += Array.from(arguments).map(function (arg) {","                    return typeof arg === 'string'","                        ? arg","                        : JSON.stringify(arg, null, 4);","                }).join(' ') + '\\n';","                // scroll textarea to bottom","                element.scrollTop = element.scrollHeight;","            };","        });","        // init event-handling","        ['change', 'click', 'keyup'].forEach(function (event) {","            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {","                element.addEventListener(event, local.testRunBrowser);","            });","        });","        // run tests","        local.testRunBrowser();","        break;","","","","    // run node js-env code - post-init","    /* istanbul ignore next */","    case 'node':","        // export local","        module.exports = local;","        // require modules","        local.fs = require('fs');","        local.http = require('http');","        local.url = require('url');","        // init assets","        local.assetsDict = local.assetsDict || {};","        /* jslint-ignore-begin */","        local.assetsDict['/assets.index.template.html'] = '\\","<!doctype html>\\n\\","<html lang=\"en\">\\n\\","<head>\\n\\","<meta charset=\"UTF-8\">\\n\\","<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\","<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\","<style>\\n\\","/*csslint\\n\\","    box-sizing: false,\\n\\","    universal-selector: false\\n\\","*/\\n\\","* {\\n\\","    box-sizing: border-box;\\n\\","}\\n\\","body {\\n\\","    background: #dde;\\n\\","    font-family: Arial, Helvetica, sans-serif;\\n\\","    margin: 2rem;\\n\\","}\\n\\","body > * {\\n\\","    margin-bottom: 1rem;\\n\\","}\\n\\",".utility2FooterDiv {\\n\\","    margin-top: 20px;\\n\\","    text-align: center;\\n\\","}\\n\\","</style>\\n\\","<style>\\n\\","/*csslint\\n\\","*/\\n\\","textarea {\\n\\","    font-family: monospace;\\n\\","    height: 10rem;\\n\\","    width: 100%;\\n\\","}\\n\\","textarea[readonly] {\\n\\","    background: #ddd;\\n\\","}\\n\\","</style>\\n\\","</head>\\n\\","<body>\\n\\","<!-- utility2-comment\\n\\","<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\","utility2-comment -->\\n\\","<h1>\\n\\","<!-- utility2-comment\\n\\","    <a\\n\\","        {{#if env.npm_package_homepage}}\\n\\","        href=\"{{env.npm_package_homepage}}\"\\n\\","        {{/if env.npm_package_homepage}}\\n\\","        target=\"_blank\"\\n\\","    >\\n\\","utility2-comment -->\\n\\","        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\","<!-- utility2-comment\\n\\","    </a>\\n\\","utility2-comment -->\\n\\","</h1>\\n\\","<h3>{{env.npm_package_description}}</h3>\\n\\","<!-- utility2-comment\\n\\","<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\","<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\","<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\","utility2-comment -->\\n\\","\\n\\","\\n\\","\\n\\","<label>stderr and stdout</label>\\n\\","<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\","<!-- utility2-comment\\n\\","{{#if isRollup}}\\n\\","<script src=\"assets.app.js\"></script>\\n\\","{{#unless isRollup}}\\n\\","utility2-comment -->\\n\\","<script src=\"assets.utility2.rollup.js\"></script>\\n\\","<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\","<script src=\"assets.npmtest_twemoji.rollup.js\"></script>\\n\\","<script src=\"assets.example.js\"></script>\\n\\","<script src=\"assets.test.js\"></script>\\n\\","<!-- utility2-comment\\n\\","{{/if isRollup}}\\n\\","utility2-comment -->\\n\\","<div class=\"utility2FooterDiv\">\\n\\","    [ this app was created with\\n\\","    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\","    ]\\n\\","</div>\\n\\","</body>\\n\\","</html>\\n\\","';","        /* jslint-ignore-end */","        if (local.templateRender) {","            local.assetsDict['/'] = local.templateRender(","                local.assetsDict['/assets.index.template.html'],","                {","                    env: local.objectSetDefault(local.env, {","                        npm_package_description: 'the greatest app in the world!',","                        npm_package_name: 'my-app',","                        npm_package_nameAlias: 'my_app',","                        npm_package_version: '0.0.1'","                    })","                }","            );","        } else {","            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']","                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {","                    // jslint-hack","                    String(match0);","                    switch (match1) {","                    case 'npm_package_description':","                        return 'the greatest app in the world!';","                    case 'npm_package_name':","                        return 'my-app';","                    case 'npm_package_nameAlias':","                        return 'my_app';","                    case 'npm_package_version':","                        return '0.0.1';","                    }","                });","        }","        // run the cli","        if (local.global.utility2_rollup || module !== require.main) {","            break;","        }","        local.assetsDict['/assets.example.js'] =","            local.assetsDict['/assets.example.js'] ||","            local.fs.readFileSync(__filename, 'utf8');","        // bug-workaround - long $npm_package_buildCustomOrg","        /* jslint-ignore-begin */","        local.assetsDict['/assets.npmtest_twemoji.rollup.js'] =","            local.assetsDict['/assets.npmtest_twemoji.rollup.js'] ||","            local.fs.readFileSync(","                local.npmtest_twemoji.__dirname + '/lib.npmtest_twemoji.js',","                'utf8'","            ).replace((/^#!/), '//');","        /* jslint-ignore-end */","        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';","        // if $npm_config_timeout_exit exists,","        // then exit this process after $npm_config_timeout_exit ms","        if (Number(process.env.npm_config_timeout_exit)) {","            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));","        }","        // start server","        if (local.global.utility2_serverHttp1) {","            break;","        }","        process.env.PORT = process.env.PORT || '8081';","        console.error('server starting on port ' + process.env.PORT);","        local.http.createServer(function (request, response) {","            request.urlParsed = local.url.parse(request.url);","            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {","                response.end(local.assetsDict[request.urlParsed.pathname]);","                return;","            }","            response.statusCode = 404;","            response.end();","        }).listen(process.env.PORT);","        break;","    }","}());",""],"l":{"26":2,"28":2,"33":2,"35":2,"37":2,"38":2,"39":2,"44":1,"51":2,"55":2,"59":2,"61":2,"69":1,"70":2,"76":2,"79":2,"82":2,"83":2,"85":1,"89":2,"92":1,"93":1,"94":1,"96":1,"97":1,"100":1,"101":1,"103":1,"106":1,"108":2,"114":1,"116":1,"118":1,"123":1,"124":2,"125":2,"126":3,"127":3,"128":3,"129":3,"130":1,"133":3,"134":3,"139":3,"143":1,"144":3,"145":1,"149":1,"150":1,"158":1,"160":1,"161":1,"162":1,"164":1,"166":1,"258":1,"259":1,"271":1,"274":6,"275":6,"277":1,"279":2,"281":1,"283":2,"288":1,"289":1,"291":1,"296":1,"303":1,"306":1,"307":1,"310":1,"311":1,"313":1,"314":1,"315":1,"316":1,"317":1,"318":1,"319":1,"321":1,"322":1,"324":1}},"/home/travis/build/npmtest/node-npmtest-twemoji/node_modules/twemoji/2/twemoji.npm.js":{"path":"/home/travis/build/npmtest/node-npmtest-twemoji/node_modules/twemoji/2/twemoji.npm.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":1,"7":1,"8":0,"9":1,"10":0,"11":1,"12":0,"13":1,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":1,"24":0,"25":1,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":1,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":1,"74":0,"75":1,"76":0,"77":1,"78":0,"79":1,"80":0,"81":0,"82":0,"83":0,"84":0,"85":1,"86":0,"87":0,"88":0,"89":1,"90":0,"91":1,"92":0,"93":0,"94":0,"95":0,"96":1,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":1,"108":1,"109":1},"b":{"1":[1,1],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[1,0]},"f":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0},"fnMap":{"1":{"name":"(anonymous_1)","line":3,"loc":{"start":{"line":3,"column":15},"end":{"line":13,"column":2}}},"2":{"name":"onerror","line":90,"loc":{"start":{"line":90,"column":15},"end":{"line":90,"column":34}}},"3":{"name":"createText","line":260,"loc":{"start":{"line":260,"column":2},"end":{"line":260,"column":28}}},"4":{"name":"escapeHTML","line":269,"loc":{"start":{"line":269,"column":2},"end":{"line":269,"column":25}}},"5":{"name":"defaultImageSrcGenerator","line":280,"loc":{"start":{"line":280,"column":2},"end":{"line":280,"column":51}}},"6":{"name":"grabAllTextNodes","line":291,"loc":{"start":{"line":291,"column":2},"end":{"line":291,"column":43}}},"7":{"name":"grabTheRightIcon","line":320,"loc":{"start":{"line":320,"column":2},"end":{"line":320,"column":37}}},"8":{"name":"parseNode","line":341,"loc":{"start":{"line":341,"column":2},"end":{"line":341,"column":36}}},"9":{"name":"parseString","line":428,"loc":{"start":{"line":428,"column":2},"end":{"line":428,"column":37}}},"10":{"name":"(anonymous_10)","line":429,"loc":{"start":{"line":429,"column":24},"end":{"line":429,"column":43}}},"11":{"name":"replacer","line":473,"loc":{"start":{"line":473,"column":2},"end":{"line":473,"column":23}}},"12":{"name":"returnNull","line":481,"loc":{"start":{"line":481,"column":2},"end":{"line":481,"column":24}}},"13":{"name":"toSizeSquaredAsset","line":493,"loc":{"start":{"line":493,"column":2},"end":{"line":493,"column":37}}},"14":{"name":"fromCodePoint","line":505,"loc":{"start":{"line":505,"column":2},"end":{"line":505,"column":36}}},"15":{"name":"parse","line":518,"loc":{"start":{"line":518,"column":2},"end":{"line":518,"column":28}}},"16":{"name":"replace","line":535,"loc":{"start":{"line":535,"column":2},"end":{"line":535,"column":35}}},"17":{"name":"test","line":539,"loc":{"start":{"line":539,"column":2},"end":{"line":539,"column":22}}},"18":{"name":"toCodePoint","line":547,"loc":{"start":{"line":547,"column":2},"end":{"line":547,"column":47}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":37}},"2":{"start":{"line":3,"column":0},"end":{"line":567,"column":5}},"3":{"start":{"line":18,"column":2},"end":{"line":245,"column":39}},"4":{"start":{"line":91,"column":8},"end":{"line":93,"column":9}},"5":{"start":{"line":92,"column":10},"end":{"line":92,"column":67}},"6":{"start":{"line":247,"column":2},"end":{"line":247,"column":17}},"7":{"start":{"line":260,"column":2},"end":{"line":262,"column":3}},"8":{"start":{"line":261,"column":4},"end":{"line":261,"column":41}},"9":{"start":{"line":269,"column":2},"end":{"line":271,"column":3}},"10":{"start":{"line":270,"column":4},"end":{"line":270,"column":41}},"11":{"start":{"line":280,"column":2},"end":{"line":282,"column":3}},"12":{"start":{"line":281,"column":4},"end":{"line":281,"column":73}},"13":{"start":{"line":291,"column":2},"end":{"line":312,"column":3}},"14":{"start":{"line":292,"column":4},"end":{"line":296,"column":15}},"15":{"start":{"line":297,"column":4},"end":{"line":310,"column":5}},"16":{"start":{"line":298,"column":6},"end":{"line":298,"column":35}},"17":{"start":{"line":299,"column":6},"end":{"line":299,"column":34}},"18":{"start":{"line":301,"column":6},"end":{"line":309,"column":7}},"19":{"start":{"line":303,"column":8},"end":{"line":303,"column":30}},"20":{"start":{"line":307,"column":11},"end":{"line":309,"column":7}},"21":{"start":{"line":308,"column":8},"end":{"line":308,"column":43}},"22":{"start":{"line":311,"column":4},"end":{"line":311,"column":19}},"23":{"start":{"line":320,"column":2},"end":{"line":326,"column":3}},"24":{"start":{"line":322,"column":4},"end":{"line":325,"column":6}},"25":{"start":{"line":341,"column":2},"end":{"line":413,"column":3}},"26":{"start":{"line":342,"column":4},"end":{"line":357,"column":10}},"27":{"start":{"line":358,"column":4},"end":{"line":411,"column":5}},"28":{"start":{"line":359,"column":6},"end":{"line":359,"column":23}},"29":{"start":{"line":360,"column":6},"end":{"line":360,"column":51}},"30":{"start":{"line":361,"column":6},"end":{"line":361,"column":32}},"31":{"start":{"line":362,"column":6},"end":{"line":362,"column":31}},"32":{"start":{"line":363,"column":6},"end":{"line":363,"column":12}},"33":{"start":{"line":364,"column":6},"end":{"line":398,"column":7}},"34":{"start":{"line":365,"column":8},"end":{"line":365,"column":28}},"35":{"start":{"line":366,"column":8},"end":{"line":370,"column":9}},"36":{"start":{"line":367,"column":10},"end":{"line":369,"column":12}},"37":{"start":{"line":371,"column":8},"end":{"line":371,"column":27}},"38":{"start":{"line":372,"column":8},"end":{"line":372,"column":43}},"39":{"start":{"line":373,"column":8},"end":{"line":373,"column":35}},"40":{"start":{"line":374,"column":8},"end":{"line":374,"column":48}},"41":{"start":{"line":375,"column":8},"end":{"line":395,"column":9}},"42":{"start":{"line":376,"column":10},"end":{"line":376,"column":28}},"43":{"start":{"line":377,"column":10},"end":{"line":377,"column":40}},"44":{"start":{"line":378,"column":10},"end":{"line":378,"column":49}},"45":{"start":{"line":379,"column":10},"end":{"line":379,"column":55}},"46":{"start":{"line":380,"column":10},"end":{"line":389,"column":11}},"47":{"start":{"line":381,"column":12},"end":{"line":388,"column":13}},"48":{"start":{"line":387,"column":14},"end":{"line":387,"column":59}},"49":{"start":{"line":390,"column":10},"end":{"line":390,"column":44}},"50":{"start":{"line":391,"column":10},"end":{"line":391,"column":28}},"51":{"start":{"line":392,"column":10},"end":{"line":392,"column":24}},"52":{"start":{"line":393,"column":10},"end":{"line":393,"column":26}},"53":{"start":{"line":394,"column":10},"end":{"line":394,"column":36}},"54":{"start":{"line":396,"column":8},"end":{"line":396,"column":60}},"55":{"start":{"line":396,"column":18},"end":{"line":396,"column":60}},"56":{"start":{"line":397,"column":8},"end":{"line":397,"column":19}},"57":{"start":{"line":400,"column":6},"end":{"line":410,"column":7}},"58":{"start":{"line":402,"column":8},"end":{"line":406,"column":9}},"59":{"start":{"line":403,"column":10},"end":{"line":405,"column":12}},"60":{"start":{"line":409,"column":8},"end":{"line":409,"column":59}},"61":{"start":{"line":412,"column":4},"end":{"line":412,"column":16}},"62":{"start":{"line":428,"column":2},"end":{"line":466,"column":3}},"63":{"start":{"line":429,"column":4},"end":{"line":465,"column":7}},"64":{"start":{"line":430,"column":6},"end":{"line":435,"column":17}},"65":{"start":{"line":436,"column":6},"end":{"line":463,"column":7}},"66":{"start":{"line":439,"column":8},"end":{"line":450,"column":10}},"67":{"start":{"line":451,"column":8},"end":{"line":451,"column":53}},"68":{"start":{"line":452,"column":8},"end":{"line":461,"column":9}},"69":{"start":{"line":453,"column":10},"end":{"line":460,"column":11}},"70":{"start":{"line":459,"column":12},"end":{"line":459,"column":85}},"71":{"start":{"line":462,"column":8},"end":{"line":462,"column":30}},"72":{"start":{"line":464,"column":6},"end":{"line":464,"column":17}},"73":{"start":{"line":473,"column":2},"end":{"line":475,"column":3}},"74":{"start":{"line":474,"column":4},"end":{"line":474,"column":22}},"75":{"start":{"line":481,"column":2},"end":{"line":483,"column":3}},"76":{"start":{"line":482,"column":4},"end":{"line":482,"column":16}},"77":{"start":{"line":493,"column":2},"end":{"line":497,"column":3}},"78":{"start":{"line":494,"column":4},"end":{"line":496,"column":12}},"79":{"start":{"line":505,"column":2},"end":{"line":516,"column":3}},"80":{"start":{"line":506,"column":4},"end":{"line":507,"column":46}},"81":{"start":{"line":508,"column":4},"end":{"line":510,"column":5}},"82":{"start":{"line":509,"column":6},"end":{"line":509,"column":32}},"83":{"start":{"line":511,"column":4},"end":{"line":511,"column":20}},"84":{"start":{"line":512,"column":4},"end":{"line":515,"column":6}},"85":{"start":{"line":518,"column":2},"end":{"line":533,"column":3}},"86":{"start":{"line":519,"column":4},"end":{"line":521,"column":5}},"87":{"start":{"line":520,"column":6},"end":{"line":520,"column":28}},"88":{"start":{"line":524,"column":4},"end":{"line":532,"column":7}},"89":{"start":{"line":535,"column":2},"end":{"line":537,"column":3}},"90":{"start":{"line":536,"column":4},"end":{"line":536,"column":46}},"91":{"start":{"line":539,"column":2},"end":{"line":545,"column":3}},"92":{"start":{"line":541,"column":4},"end":{"line":541,"column":21}},"93":{"start":{"line":542,"column":4},"end":{"line":542,"column":31}},"94":{"start":{"line":543,"column":4},"end":{"line":543,"column":21}},"95":{"start":{"line":544,"column":4},"end":{"line":544,"column":18}},"96":{"start":{"line":547,"column":2},"end":{"line":565,"column":3}},"97":{"start":{"line":548,"column":4},"end":{"line":552,"column":12}},"98":{"start":{"line":553,"column":4},"end":{"line":563,"column":5}},"99":{"start":{"line":554,"column":6},"end":{"line":554,"column":44}},"100":{"start":{"line":555,"column":6},"end":{"line":562,"column":7}},"101":{"start":{"line":556,"column":8},"end":{"line":556,"column":77}},"102":{"start":{"line":557,"column":8},"end":{"line":557,"column":14}},"103":{"start":{"line":558,"column":13},"end":{"line":562,"column":7}},"104":{"start":{"line":559,"column":8},"end":{"line":559,"column":14}},"105":{"start":{"line":561,"column":8},"end":{"line":561,"column":31}},"106":{"start":{"line":564,"column":4},"end":{"line":564,"column":30}},"107":{"start":{"line":568,"column":0},"end":{"line":570,"column":1}},"108":{"start":{"line":569,"column":2},"end":{"line":569,"column":52}},"109":{"start":{"line":571,"column":0},"end":{"line":571,"column":25}}},"branchMap":{"1":{"line":1,"type":"binary-expr","locations":[{"start":{"line":1,"column":15},"end":{"line":1,"column":30}},{"start":{"line":1,"column":34},"end":{"line":1,"column":36}}]},"2":{"line":91,"type":"if","locations":[{"start":{"line":91,"column":8},"end":{"line":91,"column":8}},{"start":{"line":91,"column":8},"end":{"line":91,"column":8}}]},"3":{"line":301,"type":"if","locations":[{"start":{"line":301,"column":6},"end":{"line":301,"column":6}},{"start":{"line":301,"column":6},"end":{"line":301,"column":6}}]},"4":{"line":307,"type":"if","locations":[{"start":{"line":307,"column":11},"end":{"line":307,"column":11}},{"start":{"line":307,"column":11},"end":{"line":307,"column":11}}]},"5":{"line":307,"type":"binary-expr","locations":[{"start":{"line":307,"column":15},"end":{"line":307,"column":29}},{"start":{"line":307,"column":33},"end":{"line":307,"column":73}}]},"6":{"line":322,"type":"cond-expr","locations":[{"start":{"line":323,"column":6},"end":{"line":323,"column":33}},{"start":{"line":324,"column":6},"end":{"line":324,"column":13}}]},"7":{"line":366,"type":"if","locations":[{"start":{"line":366,"column":8},"end":{"line":366,"column":8}},{"start":{"line":366,"column":8},"end":{"line":366,"column":8}}]},"8":{"line":375,"type":"if","locations":[{"start":{"line":375,"column":8},"end":{"line":375,"column":8}},{"start":{"line":375,"column":8},"end":{"line":375,"column":8}}]},"9":{"line":381,"type":"if","locations":[{"start":{"line":381,"column":12},"end":{"line":381,"column":12}},{"start":{"line":381,"column":12},"end":{"line":381,"column":12}}]},"10":{"line":382,"type":"binary-expr","locations":[{"start":{"line":382,"column":14},"end":{"line":382,"column":45}},{"start":{"line":384,"column":14},"end":{"line":384,"column":42}},{"start":{"line":385,"column":14},"end":{"line":385,"column":41}}]},"11":{"line":396,"type":"if","locations":[{"start":{"line":396,"column":8},"end":{"line":396,"column":8}},{"start":{"line":396,"column":8},"end":{"line":396,"column":8}}]},"12":{"line":400,"type":"if","locations":[{"start":{"line":400,"column":6},"end":{"line":400,"column":6}},{"start":{"line":400,"column":6},"end":{"line":400,"column":6}}]},"13":{"line":402,"type":"if","locations":[{"start":{"line":402,"column":8},"end":{"line":402,"column":8}},{"start":{"line":402,"column":8},"end":{"line":402,"column":8}}]},"14":{"line":436,"type":"if","locations":[{"start":{"line":436,"column":6},"end":{"line":436,"column":6}},{"start":{"line":436,"column":6},"end":{"line":436,"column":6}}]},"15":{"line":453,"type":"if","locations":[{"start":{"line":453,"column":10},"end":{"line":453,"column":10}},{"start":{"line":453,"column":10},"end":{"line":453,"column":10}}]},"16":{"line":454,"type":"binary-expr","locations":[{"start":{"line":454,"column":12},"end":{"line":454,"column":43}},{"start":{"line":456,"column":12},"end":{"line":456,"column":40}},{"start":{"line":457,"column":12},"end":{"line":457,"column":52}}]},"17":{"line":494,"type":"cond-expr","locations":[{"start":{"line":495,"column":6},"end":{"line":495,"column":25}},{"start":{"line":496,"column":6},"end":{"line":496,"column":11}}]},"18":{"line":506,"type":"cond-expr","locations":[{"start":{"line":507,"column":10},"end":{"line":507,"column":33}},{"start":{"line":507,"column":36},"end":{"line":507,"column":45}}]},"19":{"line":508,"type":"if","locations":[{"start":{"line":508,"column":4},"end":{"line":508,"column":4}},{"start":{"line":508,"column":4},"end":{"line":508,"column":4}}]},"20":{"line":519,"type":"if","locations":[{"start":{"line":519,"column":4},"end":{"line":519,"column":4}},{"start":{"line":519,"column":4},"end":{"line":519,"column":4}}]},"21":{"line":519,"type":"binary-expr","locations":[{"start":{"line":519,"column":8},"end":{"line":519,"column":12}},{"start":{"line":519,"column":16},"end":{"line":519,"column":41}}]},"22":{"line":524,"type":"cond-expr","locations":[{"start":{"line":524,"column":39},"end":{"line":524,"column":50}},{"start":{"line":524,"column":53},"end":{"line":524,"column":62}}]},"23":{"line":525,"type":"binary-expr","locations":[{"start":{"line":525,"column":18},"end":{"line":525,"column":30}},{"start":{"line":525,"column":34},"end":{"line":525,"column":58}}]},"24":{"line":526,"type":"cond-expr","locations":[{"start":{"line":526,"column":57},"end":{"line":526,"column":71}},{"start":{"line":526,"column":74},"end":{"line":526,"column":84}}]},"25":{"line":527,"type":"cond-expr","locations":[{"start":{"line":527,"column":49},"end":{"line":527,"column":57}},{"start":{"line":527,"column":60},"end":{"line":527,"column":72}}]},"26":{"line":528,"type":"binary-expr","locations":[{"start":{"line":528,"column":18},"end":{"line":528,"column":25}},{"start":{"line":528,"column":29},"end":{"line":528,"column":40}}]},"27":{"line":529,"type":"binary-expr","locations":[{"start":{"line":529,"column":18},"end":{"line":529,"column":28}},{"start":{"line":529,"column":32},"end":{"line":529,"column":76}}]},"28":{"line":529,"type":"binary-expr","locations":[{"start":{"line":529,"column":51},"end":{"line":529,"column":59}},{"start":{"line":529,"column":63},"end":{"line":529,"column":75}}]},"29":{"line":530,"type":"binary-expr","locations":[{"start":{"line":530,"column":18},"end":{"line":530,"column":31}},{"start":{"line":530,"column":35},"end":{"line":530,"column":52}}]},"30":{"line":531,"type":"binary-expr","locations":[{"start":{"line":531,"column":18},"end":{"line":531,"column":29}},{"start":{"line":531,"column":33},"end":{"line":531,"column":48}}]},"31":{"line":555,"type":"if","locations":[{"start":{"line":555,"column":6},"end":{"line":555,"column":6}},{"start":{"line":555,"column":6},"end":{"line":555,"column":6}}]},"32":{"line":558,"type":"if","locations":[{"start":{"line":558,"column":13},"end":{"line":558,"column":13}},{"start":{"line":558,"column":13},"end":{"line":558,"column":13}}]},"33":{"line":558,"type":"binary-expr","locations":[{"start":{"line":558,"column":17},"end":{"line":558,"column":28}},{"start":{"line":558,"column":32},"end":{"line":558,"column":43}}]},"34":{"line":564,"type":"binary-expr","locations":[{"start":{"line":564,"column":18},"end":{"line":564,"column":21}},{"start":{"line":564,"column":25},"end":{"line":564,"column":28}}]},"35":{"line":568,"type":"if","locations":[{"start":{"line":568,"column":0},"end":{"line":568,"column":0}},{"start":{"line":568,"column":0},"end":{"line":568,"column":0}}]}},"code":["var location = global.location || {};","/*jslint indent: 2, browser: true, bitwise: true, plusplus: true */","var twemoji = (function (","  /*! Copyright Twitter Inc. and other contributors. Licensed under MIT *//*","    https://github.com/twitter/twemoji/blob/gh-pages/LICENSE","  */","","  // WARNING:   this file is generated automatically via","  //            `node twemoji-generator.js`","  //            please update its `createTwemoji` function","  //            at the bottom of the same file instead.","",") {","  'use strict';","","  /*jshint maxparams:4 */","","  var","    // the exported module object","    twemoji = {","","","    /////////////////////////","    //      properties     //","    /////////////////////////","","      // default assets url, by default will be Twitter Inc. CDN","      base: 'https://twemoji.maxcdn.com/2/',","","      // default assets file extensions, by default '.png'","      ext: '.png',","","      // default assets/folder size, by default \"72x72\"","      // available via Twitter CDN: 72","      size: '72x72',","","      // default class name, by default 'emoji'","      className: 'emoji',","","      // basic utilities / helpers to convert code points","      // to JavaScript surrogates and vice versa","      convert: {","","        /**","         * Given an HEX codepoint, returns UTF16 surrogate pairs.","         *","         * @param   string  generic codepoint, i.e. '1F4A9'","         * @return  string  codepoint transformed into utf16 surrogates pair,","         *          i.e. \\uD83D\\uDCA9","         *","         * @example","         *  twemoji.convert.fromCodePoint('1f1e8');","         *  // \"\\ud83c\\udde8\"","         *","         *  '1f1e8-1f1f3'.split('-').map(twemoji.convert.fromCodePoint).join('')","         *  // \"\\ud83c\\udde8\\ud83c\\uddf3\"","         */","        fromCodePoint: fromCodePoint,","","        /**","         * Given UTF16 surrogate pairs, returns the equivalent HEX codepoint.","         *","         * @param   string  generic utf16 surrogates pair, i.e. \\uD83D\\uDCA9","         * @param   string  optional separator for double code points, default='-'","         * @return  string  utf16 transformed into codepoint, i.e. '1F4A9'","         *","         * @example","         *  twemoji.convert.toCodePoint('\\ud83c\\udde8\\ud83c\\uddf3');","         *  // \"1f1e8-1f1f3\"","         *","         *  twemoji.convert.toCodePoint('\\ud83c\\udde8\\ud83c\\uddf3', '~');","         *  // \"1f1e8~1f1f3\"","         */","        toCodePoint: toCodePoint","      },","","","    /////////////////////////","    //       methods       //","    /////////////////////////","","      /**","       * User first: used to remove missing images","       * preserving the original text intent when","       * a fallback for network problems is desired.","       * Automatically added to Image nodes via DOM","       * It could be recycled for string operations via:","       *  $('img.emoji').on('error', twemoji.onerror)","       */","      onerror: function onerror() {","        if (this.parentNode) {","          this.parentNode.replaceChild(createText(this.alt), this);","        }","      },","","      /**","       * Main method/logic to generate either <img> tags or HTMLImage nodes.","       *  \"emojify\" a generic text or DOM Element.","       *","       * @overloads","       *","       * String replacement for `innerHTML` or server side operations","       *  twemoji.parse(string);","       *  twemoji.parse(string, Function);","       *  twemoji.parse(string, Object);","       *","       * HTMLElement tree parsing for safer operations over existing DOM","       *  twemoji.parse(HTMLElement);","       *  twemoji.parse(HTMLElement, Function);","       *  twemoji.parse(HTMLElement, Object);","       *","       * @param   string|HTMLElement  the source to parse and enrich with emoji.","       *","       *          string              replace emoji matches with <img> tags.","       *                              Mainly used to inject emoji via `innerHTML`","       *                              It does **not** parse the string or validate it,","       *                              it simply replaces found emoji with a tag.","       *                              NOTE: be sure this won't affect security.","       *","       *          HTMLElement         walk through the DOM tree and find emoji","       *                              that are inside **text node only** (nodeType === 3)","       *                              Mainly used to put emoji in already generated DOM","       *                              without compromising surrounding nodes and","       *                              **avoiding** the usage of `innerHTML`.","       *                              NOTE: Using DOM elements instead of strings should","       *                              improve security without compromising too much","       *                              performance compared with a less safe `innerHTML`.","       *","       * @param   Function|Object  [optional]","       *                              either the callback that will be invoked or an object","       *                              with all properties to use per each found emoji.","       *","       *          Function            if specified, this will be invoked per each emoji","       *                              that has been found through the RegExp except","       *                              those follwed by the invariant \\uFE0E (\"as text\").","       *                              Once invoked, parameters will be:","       *","       *                                iconId:string     the lower case HEX code point","       *                                                  i.e. \"1f4a9\"","       *","       *                                options:Object    all info for this parsing operation","       *","       *                                variant:char      the optional \\uFE0F (\"as image\")","       *                                                  variant, in case this info","       *                                                  is anyhow meaningful.","       *                                                  By default this is ignored.","       *","       *                              If such callback will return a falsy value instead","       *                              of a valid `src` to use for the image, nothing will","       *                              actually change for that specific emoji.","       *","       *","       *          Object              if specified, an object containing the following properties","       *","       *            callback   Function  the callback to invoke per each found emoji.","       *            base       string    the base url, by default twemoji.base","       *            ext        string    the image extension, by default twemoji.ext","       *            size       string    the assets size, by default twemoji.size","       *","       * @example","       *","       *  twemoji.parse(\"I \\u2764\\uFE0F emoji!\");","       *  // I <img class=\"emoji\" draggable=\"false\" alt=\"❤️\" src=\"/assets/2764.gif\"> emoji!","       *","       *","       *  twemoji.parse(\"I \\u2764\\uFE0F emoji!\", function(iconId, options) {","       *    return '/assets/' + iconId + '.gif';","       *  });","       *  // I <img class=\"emoji\" draggable=\"false\" alt=\"❤️\" src=\"/assets/2764.gif\"> emoji!","       *","       *","       * twemoji.parse(\"I \\u2764\\uFE0F emoji!\", {","       *   size: 72,","       *   callback: function(iconId, options) {","       *     return '/assets/' + options.size + '/' + iconId + options.ext;","       *   }","       * });","       *  // I <img class=\"emoji\" draggable=\"false\" alt=\"❤️\" src=\"/assets/72x72/2764.png\"> emoji!","       *","       */","      parse: parse,","","      /**","       * Given a string, invokes the callback argument","       *  per each emoji found in such string.","       * This is the most raw version used by","       *  the .parse(string) method itself.","       *","       * @param   string    generic string to parse","       * @param   Function  a generic callback that will be","       *                    invoked to replace the content.","       *                    This calback wil receive standard","       *                    String.prototype.replace(str, callback)","       *                    arguments such:","       *  callback(","       *    rawText,  // the emoji match","       *  );","       *","       *                    and others commonly received via replace.","       */","      replace: replace,","","      /**","       * Simplify string tests against emoji.","       *","       * @param   string  some text that might contain emoji","       * @return  boolean true if any emoji was found, false otherwise.","       *","       * @example","       *","       *  if (twemoji.test(someContent)) {","       *    console.log(\"emoji All The Things!\");","       *  }","       */","      test: test","    },","","    // used to escape HTML special chars in attributes","    escaper = {","      '&': '&amp;',","      '<': '&lt;',","      '>': '&gt;',","      \"'\": '&#39;',","      '\"': '&quot;'","    },","","    // RegExp based on emoji's official Unicode standards","    // http://www.unicode.org/Public/UNIDATA/EmojiSources.txt","    re = /\\ud83d[\\udc68-\\udc69](?:\\ud83c[\\udffb-\\udfff])?\\u200d(?:\\u2695\\ufe0f|\\u2696\\ufe0f|\\u2708\\ufe0f|\\ud83c[\\udf3e\\udf73\\udf93\\udfa4\\udfa8\\udfeb\\udfed]|\\ud83d[\\udcbb\\udcbc\\udd27\\udd2c\\ude80\\ude92])|(?:\\ud83c[\\udfcb\\udfcc]|\\ud83d\\udd75|\\u26f9)(?:\\ufe0f|\\ud83c[\\udffb-\\udfff])\\u200d[\\u2640\\u2642]\\ufe0f|(?:\\ud83c[\\udfc3\\udfc4\\udfca]|\\ud83d[\\udc6e\\udc71\\udc73\\udc77\\udc81\\udc82\\udc86\\udc87\\ude45-\\ude47\\ude4b\\ude4d\\ude4e\\udea3\\udeb4-\\udeb6]|\\ud83e[\\udd26\\udd37-\\udd39\\udd3d\\udd3e])(?:\\ud83c[\\udffb-\\udfff])?\\u200d[\\u2640\\u2642]\\ufe0f|\\ud83d\\udc68\\u200d\\u2764\\ufe0f\\u200d\\ud83d\\udc8b\\u200d\\ud83d\\udc68|\\ud83d\\udc68\\u200d\\ud83d\\udc68\\u200d\\ud83d\\udc66\\u200d\\ud83d\\udc66|\\ud83d\\udc68\\u200d\\ud83d\\udc68\\u200d\\ud83d\\udc67\\u200d\\ud83d[\\udc66\\udc67]|\\ud83d\\udc68\\u200d\\ud83d\\udc69\\u200d\\ud83d\\udc66\\u200d\\ud83d\\udc66|\\ud83d\\udc68\\u200d\\ud83d\\udc69\\u200d\\ud83d\\udc67\\u200d\\ud83d[\\udc66\\udc67]|\\ud83d\\udc69\\u200d\\u2764\\ufe0f\\u200d\\ud83d\\udc8b\\u200d\\ud83d[\\udc68\\udc69]|\\ud83d\\udc69\\u200d\\ud83d\\udc69\\u200d\\ud83d\\udc66\\u200d\\ud83d\\udc66|\\ud83d\\udc69\\u200d\\ud83d\\udc69\\u200d\\ud83d\\udc67\\u200d\\ud83d[\\udc66\\udc67]|\\ud83d\\udc68\\u200d\\u2764\\ufe0f\\u200d\\ud83d\\udc68|\\ud83d\\udc68\\u200d\\ud83d\\udc66\\u200d\\ud83d\\udc66|\\ud83d\\udc68\\u200d\\ud83d\\udc67\\u200d\\ud83d[\\udc66\\udc67]|\\ud83d\\udc68\\u200d\\ud83d\\udc68\\u200d\\ud83d[\\udc66\\udc67]|\\ud83d\\udc68\\u200d\\ud83d\\udc69\\u200d\\ud83d[\\udc66\\udc67]|\\ud83d\\udc69\\u200d\\u2764\\ufe0f\\u200d\\ud83d[\\udc68\\udc69]|\\ud83d\\udc69\\u200d\\ud83d\\udc66\\u200d\\ud83d\\udc66|\\ud83d\\udc69\\u200d\\ud83d\\udc67\\u200d\\ud83d[\\udc66\\udc67]|\\ud83d\\udc69\\u200d\\ud83d\\udc69\\u200d\\ud83d[\\udc66\\udc67]|\\ud83c\\udff3\\ufe0f\\u200d\\ud83c\\udf08|\\ud83c\\udff4\\u200d\\u2620\\ufe0f|\\ud83d\\udc41\\u200d\\ud83d\\udde8|\\ud83d\\udc68\\u200d\\ud83d[\\udc66\\udc67]|\\ud83d\\udc69\\u200d\\ud83d[\\udc66\\udc67]|\\ud83d\\udc6f\\u200d\\u2640\\ufe0f|\\ud83d\\udc6f\\u200d\\u2642\\ufe0f|\\ud83e\\udd3c\\u200d\\u2640\\ufe0f|\\ud83e\\udd3c\\u200d\\u2642\\ufe0f|(?:[\\u0023\\u002a\\u0030-\\u0039])\\ufe0f?\\u20e3|(?:(?:\\ud83c[\\udfcb\\udfcc]|\\ud83d[\\udd74\\udd75\\udd90]|[\\u261d\\u26f7\\u26f9\\u270c\\u270d])(?:\\ufe0f|(?!\\ufe0e))|\\ud83c[\\udf85\\udfc2-\\udfc4\\udfc7\\udfca]|\\ud83d[\\udc42\\udc43\\udc46-\\udc50\\udc66-\\udc69\\udc6e\\udc70-\\udc78\\udc7c\\udc81-\\udc83\\udc85-\\udc87\\udcaa\\udd7a\\udd95\\udd96\\ude45-\\ude47\\ude4b-\\ude4f\\udea3\\udeb4-\\udeb6\\udec0\\udecc]|\\ud83e[\\udd18-\\udd1c\\udd1e\\udd26\\udd30\\udd33-\\udd39\\udd3d\\udd3e]|[\\u270a\\u270b])(?:\\ud83c[\\udffb-\\udfff]|)|\\ud83c\\udde6\\ud83c[\\udde8-\\uddec\\uddee\\uddf1\\uddf2\\uddf4\\uddf6-\\uddfa\\uddfc\\uddfd\\uddff]|\\ud83c\\udde7\\ud83c[\\udde6\\udde7\\udde9-\\uddef\\uddf1-\\uddf4\\uddf6-\\uddf9\\uddfb\\uddfc\\uddfe\\uddff]|\\ud83c\\udde8\\ud83c[\\udde6\\udde8\\udde9\\uddeb-\\uddee\\uddf0-\\uddf5\\uddf7\\uddfa-\\uddff]|\\ud83c\\udde9\\ud83c[\\uddea\\uddec\\uddef\\uddf0\\uddf2\\uddf4\\uddff]|\\ud83c\\uddea\\ud83c[\\udde6\\udde8\\uddea\\uddec\\udded\\uddf7-\\uddfa]|\\ud83c\\uddeb\\ud83c[\\uddee-\\uddf0\\uddf2\\uddf4\\uddf7]|\\ud83c\\uddec\\ud83c[\\udde6\\udde7\\udde9-\\uddee\\uddf1-\\uddf3\\uddf5-\\uddfa\\uddfc\\uddfe]|\\ud83c\\udded\\ud83c[\\uddf0\\uddf2\\uddf3\\uddf7\\uddf9\\uddfa]|\\ud83c\\uddee\\ud83c[\\udde8-\\uddea\\uddf1-\\uddf4\\uddf6-\\uddf9]|\\ud83c\\uddef\\ud83c[\\uddea\\uddf2\\uddf4\\uddf5]|\\ud83c\\uddf0\\ud83c[\\uddea\\uddec-\\uddee\\uddf2\\uddf3\\uddf5\\uddf7\\uddfc\\uddfe\\uddff]|\\ud83c\\uddf1\\ud83c[\\udde6-\\udde8\\uddee\\uddf0\\uddf7-\\uddfb\\uddfe]|\\ud83c\\uddf2\\ud83c[\\udde6\\udde8-\\udded\\uddf0-\\uddff]|\\ud83c\\uddf3\\ud83c[\\udde6\\udde8\\uddea-\\uddec\\uddee\\uddf1\\uddf4\\uddf5\\uddf7\\uddfa\\uddff]|\\ud83c\\uddf4\\ud83c\\uddf2|\\ud83c\\uddf5\\ud83c[\\udde6\\uddea-\\udded\\uddf0-\\uddf3\\uddf7-\\uddf9\\uddfc\\uddfe]|\\ud83c\\uddf6\\ud83c\\udde6|\\ud83c\\uddf7\\ud83c[\\uddea\\uddf4\\uddf8\\uddfa\\uddfc]|\\ud83c\\uddf8\\ud83c[\\udde6-\\uddea\\uddec-\\uddf4\\uddf7-\\uddf9\\uddfb\\uddfd-\\uddff]|\\ud83c\\uddf9\\ud83c[\\udde6\\udde8\\udde9\\uddeb-\\udded\\uddef-\\uddf4\\uddf7\\uddf9\\uddfb\\uddfc\\uddff]|\\ud83c\\uddfa\\ud83c[\\udde6\\uddec\\uddf2\\uddf3\\uddf8\\uddfe\\uddff]|\\ud83c\\uddfb\\ud83c[\\udde6\\udde8\\uddea\\uddec\\uddee\\uddf3\\uddfa]|\\ud83c\\uddfc\\ud83c[\\uddeb\\uddf8]|\\ud83c\\uddfd\\ud83c\\uddf0|\\ud83c\\uddfe\\ud83c[\\uddea\\uddf9]|\\ud83c\\uddff\\ud83c[\\udde6\\uddf2\\uddfc]|\\ud800\\udc00|\\ud83c[\\udccf\\udd8e\\udd91-\\udd9a\\udde6-\\uddff\\ude01\\ude32-\\ude36\\ude38-\\ude3a\\ude50\\ude51\\udf00-\\udf20\\udf2d-\\udf35\\udf37-\\udf7c\\udf7e-\\udf84\\udf86-\\udf93\\udfa0-\\udfc1\\udfc5\\udfc6\\udfc8\\udfc9\\udfcf-\\udfd3\\udfe0-\\udff0\\udff4\\udff8-\\udfff]|\\ud83d[\\udc00-\\udc3e\\udc40\\udc44\\udc45\\udc51-\\udc65\\udc6a-\\udc6d\\udc6f\\udc79-\\udc7b\\udc7d-\\udc80\\udc84\\udc88-\\udca9\\udcab-\\udcfc\\udcff-\\udd3d\\udd4b-\\udd4e\\udd50-\\udd67\\udda4\\uddfb-\\ude44\\ude48-\\ude4a\\ude80-\\udea2\\udea4-\\udeb3\\udeb7-\\udebf\\udec1-\\udec5\\uded0-\\uded2\\udeeb\\udeec\\udef4-\\udef6]|\\ud83e[\\udd10-\\udd17\\udd1d\\udd20-\\udd25\\udd27\\udd3a\\udd3c\\udd40-\\udd45\\udd47-\\udd4b\\udd50-\\udd5e\\udd80-\\udd91\\uddc0]|[\\u23e9-\\u23ec\\u23f0\\u23f3\\u2640\\u2642\\u2695\\u26ce\\u2705\\u2728\\u274c\\u274e\\u2753-\\u2755\\u2795-\\u2797\\u27b0\\u27bf\\ue50a]|(?:\\ud83c[\\udc04\\udd70\\udd71\\udd7e\\udd7f\\ude02\\ude1a\\ude2f\\ude37\\udf21\\udf24-\\udf2c\\udf36\\udf7d\\udf96\\udf97\\udf99-\\udf9b\\udf9e\\udf9f\\udfcd\\udfce\\udfd4-\\udfdf\\udff3\\udff5\\udff7]|\\ud83d[\\udc3f\\udc41\\udcfd\\udd49\\udd4a\\udd6f\\udd70\\udd73\\udd76-\\udd79\\udd87\\udd8a-\\udd8d\\udda5\\udda8\\uddb1\\uddb2\\uddbc\\uddc2-\\uddc4\\uddd1-\\uddd3\\udddc-\\uddde\\udde1\\udde3\\udde8\\uddef\\uddf3\\uddfa\\udecb\\udecd-\\udecf\\udee0-\\udee5\\udee9\\udef0\\udef3]|[\\u00a9\\u00ae\\u203c\\u2049\\u2122\\u2139\\u2194-\\u2199\\u21a9\\u21aa\\u231a\\u231b\\u2328\\u23cf\\u23ed-\\u23ef\\u23f1\\u23f2\\u23f8-\\u23fa\\u24c2\\u25aa\\u25ab\\u25b6\\u25c0\\u25fb-\\u25fe\\u2600-\\u2604\\u260e\\u2611\\u2614\\u2615\\u2618\\u2620\\u2622\\u2623\\u2626\\u262a\\u262e\\u262f\\u2638-\\u263a\\u2648-\\u2653\\u2660\\u2663\\u2665\\u2666\\u2668\\u267b\\u267f\\u2692-\\u2694\\u2696\\u2697\\u2699\\u269b\\u269c\\u26a0\\u26a1\\u26aa\\u26ab\\u26b0\\u26b1\\u26bd\\u26be\\u26c4\\u26c5\\u26c8\\u26cf\\u26d1\\u26d3\\u26d4\\u26e9\\u26ea\\u26f0-\\u26f5\\u26f8\\u26fa\\u26fd\\u2702\\u2708\\u2709\\u270f\\u2712\\u2714\\u2716\\u271d\\u2721\\u2733\\u2734\\u2744\\u2747\\u2757\\u2763\\u2764\\u27a1\\u2934\\u2935\\u2b05-\\u2b07\\u2b1b\\u2b1c\\u2b50\\u2b55\\u3030\\u303d\\u3297\\u3299])(?:\\ufe0f|(?!\\ufe0e))/g,","","    // avoid runtime RegExp creation for not so smart,","    // not JIT based, and old browsers / engines","    UFE0Fg = /\\uFE0F/g,","","    // avoid using a string literal like '\\u200D' here because minifiers expand it inline","    U200D = String.fromCharCode(0x200D),","","    // used to find HTML special chars in attributes","    rescaper = /[&<>'\"]/g,","","    // nodes with type 1 which should **not** be parsed (including lower case svg)","    shouldntBeParsed = /IFRAME|NOFRAMES|NOSCRIPT|SCRIPT|SELECT|STYLE|TEXTAREA|[a-z]/,","","    // just a private shortcut","    fromCharCode = String.fromCharCode;","","  return twemoji;","","","  /////////////////////////","  //  private functions  //","  //     declaration     //","  /////////////////////////","","  /**","   * Shortcut to create text nodes","   * @param   string  text used to create DOM text node","   * @return  Node  a DOM node with that text","   */","  function createText(text) {","    return document.createTextNode(text);","  }","","  /**","   * Utility function to escape html attribute text","   * @param   string  text use in HTML attribute","   * @return  string  text encoded to use in HTML attribute","   */","  function escapeHTML(s) {","    return s.replace(rescaper, replacer);","  }","","  /**","   * Default callback used to generate emoji src","   *  based on Twitter CDN","   * @param   string    the emoji codepoint string","   * @param   string    the default size to use, i.e. \"36x36\"","   * @return  string    the image source to use","   */","  function defaultImageSrcGenerator(icon, options) {","    return ''.concat(options.base, options.size, '/', icon, options.ext);","  }","","  /**","   * Given a generic DOM nodeType 1, walk through all children","   * and store every nodeType 3 (#text) found in the tree.","   * @param   Element a DOM Element with probably some text in it","   * @param   Array the list of previously discovered text nodes","   * @return  Array same list with new discovered nodes, if any","   */","  function grabAllTextNodes(node, allText) {","    var","      childNodes = node.childNodes,","      length = childNodes.length,","      subnode,","      nodeType;","    while (length--) {","      subnode = childNodes[length];","      nodeType = subnode.nodeType;","      // parse emoji only in text nodes","      if (nodeType === 3) {","        // collect them to process emoji later","        allText.push(subnode);","      }","      // ignore all nodes that are not type 1 or that","      // should not be parsed as script, style, and others","      else if (nodeType === 1 && !shouldntBeParsed.test(subnode.nodeName)) {","        grabAllTextNodes(subnode, allText);","      }","    }","    return allText;","  }","","  /**","   * Used to both remove the possible variant","   *  and to convert utf16 into code points.","   *  If there is a zero-width-joiner (U+200D), leave the variants in.","   * @param   string    the raw text of the emoji match","   */","  function grabTheRightIcon(rawText) {","    // if variant is present as \\uFE0F","    return toCodePoint(rawText.indexOf(U200D) < 0 ?","      rawText.replace(UFE0Fg, '') :","      rawText","    );","  }","","  /**","   * DOM version of the same logic / parser:","   *  emojify all found sub-text nodes placing images node instead.","   * @param   Element   generic DOM node with some text in some child node","   * @param   Object    options  containing info about how to parse","    *","    *            .callback   Function  the callback to invoke per each found emoji.","    *            .base       string    the base url, by default twemoji.base","    *            .ext        string    the image extension, by default twemoji.ext","    *            .size       string    the assets size, by default twemoji.size","    *","   * @return  Element same generic node with emoji in place, if any.","   */","  function parseNode(node, options) {","    var","      allText = grabAllTextNodes(node, []),","      length = allText.length,","      attrib,","      attrname,","      modified,","      fragment,","      subnode,","      text,","      match,","      i,","      index,","      img,","      rawText,","      iconId,","      src;","    while (length--) {","      modified = false;","      fragment = document.createDocumentFragment();","      subnode = allText[length];","      text = subnode.nodeValue;","      i = 0;","      while ((match = re.exec(text))) {","        index = match.index;","        if (index !== i) {","          fragment.appendChild(","            createText(text.slice(i, index))","          );","        }","        rawText = match[0];","        iconId = grabTheRightIcon(rawText);","        i = index + rawText.length;","        src = options.callback(iconId, options);","        if (src) {","          img = new Image();","          img.onerror = options.onerror;","          img.setAttribute('draggable', 'false');","          attrib = options.attributes(rawText, iconId);","          for (attrname in attrib) {","            if (","              attrib.hasOwnProperty(attrname) &&","              // don't allow any handlers to be set + don't allow overrides","              attrname.indexOf('on') !== 0 &&","              !img.hasAttribute(attrname)","            ) {","              img.setAttribute(attrname, attrib[attrname]);","            }","          }","          img.className = options.className;","          img.alt = rawText;","          img.src = src;","          modified = true;","          fragment.appendChild(img);","        }","        if (!img) fragment.appendChild(createText(rawText));","        img = null;","      }","      // is there actually anything to replace in here ?","      if (modified) {","        // any text left to be added ?","        if (i < text.length) {","          fragment.appendChild(","            createText(text.slice(i))","          );","        }","        // replace the text node only, leave intact","        // anything else surrounding such text","        subnode.parentNode.replaceChild(fragment, subnode);","      }","    }","    return node;","  }","","  /**","   * String/HTML version of the same logic / parser:","   *  emojify a generic text placing images tags instead of surrogates pair.","   * @param   string    generic string with possibly some emoji in it","   * @param   Object    options  containing info about how to parse","   *","   *            .callback   Function  the callback to invoke per each found emoji.","   *            .base       string    the base url, by default twemoji.base","   *            .ext        string    the image extension, by default twemoji.ext","   *            .size       string    the assets size, by default twemoji.size","   *","   * @return  the string with <img tags> replacing all found and parsed emoji","   */","  function parseString(str, options) {","    return replace(str, function (rawText) {","      var","        ret = rawText,","        iconId = grabTheRightIcon(rawText),","        src = options.callback(iconId, options),","        attrib,","        attrname;","      if (src) {","        // recycle the match string replacing the emoji","        // with its image counter part","        ret = '<img '.concat(","          'class=\"', options.className, '\" ',","          'draggable=\"false\" ',","          // needs to preserve user original intent","          // when variants should be copied and pasted too","          'alt=\"',","          rawText,","          '\"',","          ' src=\"',","          src,","          '\"'","        );","        attrib = options.attributes(rawText, iconId);","        for (attrname in attrib) {","          if (","            attrib.hasOwnProperty(attrname) &&","            // don't allow any handlers to be set + don't allow overrides","            attrname.indexOf('on') !== 0 &&","            ret.indexOf(' ' + attrname + '=') === -1","          ) {","            ret = ret.concat(' ', attrname, '=\"', escapeHTML(attrib[attrname]), '\"');","          }","        }","        ret = ret.concat('>');","      }","      return ret;","    });","  }","","  /**","   * Function used to actually replace HTML special chars","   * @param   string  HTML special char","   * @return  string  encoded HTML special char","   */","  function replacer(m) {","    return escaper[m];","  }","","  /**","   * Default options.attribute callback","   * @return  null","   */","  function returnNull() {","    return null;","  }","","  /**","   * Given a generic value, creates its squared counterpart if it's a number.","   *  As example, number 36 will return '36x36'.","   * @param   any     a generic value.","   * @return  any     a string representing asset size, i.e. \"36x36\"","   *                  only in case the value was a number.","   *                  Returns initial value otherwise.","   */","  function toSizeSquaredAsset(value) {","    return typeof value === 'number' ?","      value + 'x' + value :","      value;","  }","","","  /////////////////////////","  //  exported functions //","  //     declaration     //","  /////////////////////////","","  function fromCodePoint(codepoint) {","    var code = typeof codepoint === 'string' ?","          parseInt(codepoint, 16) : codepoint;","    if (code < 0x10000) {","      return fromCharCode(code);","    }","    code -= 0x10000;","    return fromCharCode(","      0xD800 + (code >> 10),","      0xDC00 + (code & 0x3FF)","    );","  }","","  function parse(what, how) {","    if (!how || typeof how === 'function') {","      how = {callback: how};","    }","    // if first argument is string, inject html <img> tags","    // otherwise use the DOM tree and parse text nodes only","    return (typeof what === 'string' ? parseString : parseNode)(what, {","      callback:   how.callback || defaultImageSrcGenerator,","      attributes: typeof how.attributes === 'function' ? how.attributes : returnNull,","      base:       typeof how.base === 'string' ? how.base : twemoji.base,","      ext:        how.ext || twemoji.ext,","      size:       how.folder || toSizeSquaredAsset(how.size || twemoji.size),","      className:  how.className || twemoji.className,","      onerror:    how.onerror || twemoji.onerror","    });","  }","","  function replace(text, callback) {","    return String(text).replace(re, callback);","  }","","  function test(text) {","    // IE6 needs a reset before too","    re.lastIndex = 0;","    var result = re.test(text);","    re.lastIndex = 0;","    return result;","  }","","  function toCodePoint(unicodeSurrogates, sep) {","    var","      r = [],","      c = 0,","      p = 0,","      i = 0;","    while (i < unicodeSurrogates.length) {","      c = unicodeSurrogates.charCodeAt(i++);","      if (p) {","        r.push((0x10000 + ((p - 0xD800) << 10) + (c - 0xDC00)).toString(16));","        p = 0;","      } else if (0xD800 <= c && c <= 0xDBFF) {","        p = c;","      } else {","        r.push(c.toString(16));","      }","    }","    return r.join(sep || '-');","  }","","}());","if (!location.protocol) {","  twemoji.base = twemoji.base.replace(/^http:/, \"\");","}","module.exports = twemoji;"],"l":{"1":1,"3":1,"18":1,"91":0,"92":0,"247":1,"260":1,"261":0,"269":1,"270":0,"280":1,"281":0,"291":1,"292":0,"297":0,"298":0,"299":0,"301":0,"303":0,"307":0,"308":0,"311":0,"320":1,"322":0,"341":1,"342":0,"358":0,"359":0,"360":0,"361":0,"362":0,"363":0,"364":0,"365":0,"366":0,"367":0,"371":0,"372":0,"373":0,"374":0,"375":0,"376":0,"377":0,"378":0,"379":0,"380":0,"381":0,"387":0,"390":0,"391":0,"392":0,"393":0,"394":0,"396":0,"397":0,"400":0,"402":0,"403":0,"409":0,"412":0,"428":1,"429":0,"430":0,"436":0,"439":0,"451":0,"452":0,"453":0,"459":0,"462":0,"464":0,"473":1,"474":0,"481":1,"482":0,"493":1,"494":0,"505":1,"506":0,"508":0,"509":0,"511":0,"512":0,"518":1,"519":0,"520":0,"524":0,"535":1,"536":0,"539":1,"541":0,"542":0,"543":0,"544":0,"547":1,"548":0,"553":0,"554":0,"555":0,"556":0,"557":0,"558":0,"559":0,"561":0,"564":0,"568":1,"569":1,"571":1}},"/home/travis/build/npmtest/node-npmtest-twemoji/node_modules/twemoji/2/twemoji.amd.js":{"path":"/home/travis/build/npmtest/node-npmtest-twemoji/node_modules/twemoji/2/twemoji.amd.js","s":{"1":2,"2":0,"3":0,"4":0,"5":0,"6":0,"7":1,"8":0,"9":1,"10":0,"11":1,"12":0,"13":1,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":1,"24":0,"25":1,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":1,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":1,"74":0,"75":1,"76":0,"77":1,"78":0,"79":1,"80":0,"81":0,"82":0,"83":0,"84":0,"85":1,"86":0,"87":0,"88":0,"89":1,"90":0,"91":1,"92":0,"93":0,"94":0,"95":0,"96":1,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":7},"end":{"line":1,"column":19}}},"2":{"name":"(anonymous_2)","line":3,"loc":{"start":{"line":3,"column":17},"end":{"line":13,"column":4}}},"3":{"name":"onerror","line":90,"loc":{"start":{"line":90,"column":17},"end":{"line":90,"column":36}}},"4":{"name":"createText","line":260,"loc":{"start":{"line":260,"column":4},"end":{"line":260,"column":30}}},"5":{"name":"escapeHTML","line":269,"loc":{"start":{"line":269,"column":4},"end":{"line":269,"column":27}}},"6":{"name":"defaultImageSrcGenerator","line":280,"loc":{"start":{"line":280,"column":4},"end":{"line":280,"column":53}}},"7":{"name":"grabAllTextNodes","line":291,"loc":{"start":{"line":291,"column":4},"end":{"line":291,"column":45}}},"8":{"name":"grabTheRightIcon","line":320,"loc":{"start":{"line":320,"column":4},"end":{"line":320,"column":39}}},"9":{"name":"parseNode","line":341,"loc":{"start":{"line":341,"column":4},"end":{"line":341,"column":38}}},"10":{"name":"parseString","line":428,"loc":{"start":{"line":428,"column":4},"end":{"line":428,"column":39}}},"11":{"name":"(anonymous_11)","line":429,"loc":{"start":{"line":429,"column":26},"end":{"line":429,"column":45}}},"12":{"name":"replacer","line":473,"loc":{"start":{"line":473,"column":4},"end":{"line":473,"column":25}}},"13":{"name":"returnNull","line":481,"loc":{"start":{"line":481,"column":4},"end":{"line":481,"column":26}}},"14":{"name":"toSizeSquaredAsset","line":493,"loc":{"start":{"line":493,"column":4},"end":{"line":493,"column":39}}},"15":{"name":"fromCodePoint","line":505,"loc":{"start":{"line":505,"column":4},"end":{"line":505,"column":38}}},"16":{"name":"parse","line":518,"loc":{"start":{"line":518,"column":4},"end":{"line":518,"column":30}}},"17":{"name":"replace","line":535,"loc":{"start":{"line":535,"column":4},"end":{"line":535,"column":37}}},"18":{"name":"test","line":539,"loc":{"start":{"line":539,"column":4},"end":{"line":539,"column":24}}},"19":{"name":"toCodePoint","line":547,"loc":{"start":{"line":547,"column":4},"end":{"line":547,"column":49}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":569,"column":3}},"2":{"start":{"line":3,"column":2},"end":{"line":567,"column":7}},"3":{"start":{"line":18,"column":4},"end":{"line":245,"column":41}},"4":{"start":{"line":91,"column":10},"end":{"line":93,"column":11}},"5":{"start":{"line":92,"column":12},"end":{"line":92,"column":69}},"6":{"start":{"line":247,"column":4},"end":{"line":247,"column":19}},"7":{"start":{"line":260,"column":4},"end":{"line":262,"column":5}},"8":{"start":{"line":261,"column":6},"end":{"line":261,"column":43}},"9":{"start":{"line":269,"column":4},"end":{"line":271,"column":5}},"10":{"start":{"line":270,"column":6},"end":{"line":270,"column":43}},"11":{"start":{"line":280,"column":4},"end":{"line":282,"column":5}},"12":{"start":{"line":281,"column":6},"end":{"line":281,"column":75}},"13":{"start":{"line":291,"column":4},"end":{"line":312,"column":5}},"14":{"start":{"line":292,"column":6},"end":{"line":296,"column":17}},"15":{"start":{"line":297,"column":6},"end":{"line":310,"column":7}},"16":{"start":{"line":298,"column":8},"end":{"line":298,"column":37}},"17":{"start":{"line":299,"column":8},"end":{"line":299,"column":36}},"18":{"start":{"line":301,"column":8},"end":{"line":309,"column":9}},"19":{"start":{"line":303,"column":10},"end":{"line":303,"column":32}},"20":{"start":{"line":307,"column":13},"end":{"line":309,"column":9}},"21":{"start":{"line":308,"column":10},"end":{"line":308,"column":45}},"22":{"start":{"line":311,"column":6},"end":{"line":311,"column":21}},"23":{"start":{"line":320,"column":4},"end":{"line":326,"column":5}},"24":{"start":{"line":322,"column":6},"end":{"line":325,"column":8}},"25":{"start":{"line":341,"column":4},"end":{"line":413,"column":5}},"26":{"start":{"line":342,"column":6},"end":{"line":357,"column":12}},"27":{"start":{"line":358,"column":6},"end":{"line":411,"column":7}},"28":{"start":{"line":359,"column":8},"end":{"line":359,"column":25}},"29":{"start":{"line":360,"column":8},"end":{"line":360,"column":53}},"30":{"start":{"line":361,"column":8},"end":{"line":361,"column":34}},"31":{"start":{"line":362,"column":8},"end":{"line":362,"column":33}},"32":{"start":{"line":363,"column":8},"end":{"line":363,"column":14}},"33":{"start":{"line":364,"column":8},"end":{"line":398,"column":9}},"34":{"start":{"line":365,"column":10},"end":{"line":365,"column":30}},"35":{"start":{"line":366,"column":10},"end":{"line":370,"column":11}},"36":{"start":{"line":367,"column":12},"end":{"line":369,"column":14}},"37":{"start":{"line":371,"column":10},"end":{"line":371,"column":29}},"38":{"start":{"line":372,"column":10},"end":{"line":372,"column":45}},"39":{"start":{"line":373,"column":10},"end":{"line":373,"column":37}},"40":{"start":{"line":374,"column":10},"end":{"line":374,"column":50}},"41":{"start":{"line":375,"column":10},"end":{"line":395,"column":11}},"42":{"start":{"line":376,"column":12},"end":{"line":376,"column":30}},"43":{"start":{"line":377,"column":12},"end":{"line":377,"column":42}},"44":{"start":{"line":378,"column":12},"end":{"line":378,"column":51}},"45":{"start":{"line":379,"column":12},"end":{"line":379,"column":57}},"46":{"start":{"line":380,"column":12},"end":{"line":389,"column":13}},"47":{"start":{"line":381,"column":14},"end":{"line":388,"column":15}},"48":{"start":{"line":387,"column":16},"end":{"line":387,"column":61}},"49":{"start":{"line":390,"column":12},"end":{"line":390,"column":46}},"50":{"start":{"line":391,"column":12},"end":{"line":391,"column":30}},"51":{"start":{"line":392,"column":12},"end":{"line":392,"column":26}},"52":{"start":{"line":393,"column":12},"end":{"line":393,"column":28}},"53":{"start":{"line":394,"column":12},"end":{"line":394,"column":38}},"54":{"start":{"line":396,"column":10},"end":{"line":396,"column":62}},"55":{"start":{"line":396,"column":20},"end":{"line":396,"column":62}},"56":{"start":{"line":397,"column":10},"end":{"line":397,"column":21}},"57":{"start":{"line":400,"column":8},"end":{"line":410,"column":9}},"58":{"start":{"line":402,"column":10},"end":{"line":406,"column":11}},"59":{"start":{"line":403,"column":12},"end":{"line":405,"column":14}},"60":{"start":{"line":409,"column":10},"end":{"line":409,"column":61}},"61":{"start":{"line":412,"column":6},"end":{"line":412,"column":18}},"62":{"start":{"line":428,"column":4},"end":{"line":466,"column":5}},"63":{"start":{"line":429,"column":6},"end":{"line":465,"column":9}},"64":{"start":{"line":430,"column":8},"end":{"line":435,"column":19}},"65":{"start":{"line":436,"column":8},"end":{"line":463,"column":9}},"66":{"start":{"line":439,"column":10},"end":{"line":450,"column":12}},"67":{"start":{"line":451,"column":10},"end":{"line":451,"column":55}},"68":{"start":{"line":452,"column":10},"end":{"line":461,"column":11}},"69":{"start":{"line":453,"column":12},"end":{"line":460,"column":13}},"70":{"start":{"line":459,"column":14},"end":{"line":459,"column":87}},"71":{"start":{"line":462,"column":10},"end":{"line":462,"column":32}},"72":{"start":{"line":464,"column":8},"end":{"line":464,"column":19}},"73":{"start":{"line":473,"column":4},"end":{"line":475,"column":5}},"74":{"start":{"line":474,"column":6},"end":{"line":474,"column":24}},"75":{"start":{"line":481,"column":4},"end":{"line":483,"column":5}},"76":{"start":{"line":482,"column":6},"end":{"line":482,"column":18}},"77":{"start":{"line":493,"column":4},"end":{"line":497,"column":5}},"78":{"start":{"line":494,"column":6},"end":{"line":496,"column":14}},"79":{"start":{"line":505,"column":4},"end":{"line":516,"column":5}},"80":{"start":{"line":506,"column":6},"end":{"line":507,"column":48}},"81":{"start":{"line":508,"column":6},"end":{"line":510,"column":7}},"82":{"start":{"line":509,"column":8},"end":{"line":509,"column":34}},"83":{"start":{"line":511,"column":6},"end":{"line":511,"column":22}},"84":{"start":{"line":512,"column":6},"end":{"line":515,"column":8}},"85":{"start":{"line":518,"column":4},"end":{"line":533,"column":5}},"86":{"start":{"line":519,"column":6},"end":{"line":521,"column":7}},"87":{"start":{"line":520,"column":8},"end":{"line":520,"column":30}},"88":{"start":{"line":524,"column":6},"end":{"line":532,"column":9}},"89":{"start":{"line":535,"column":4},"end":{"line":537,"column":5}},"90":{"start":{"line":536,"column":6},"end":{"line":536,"column":48}},"91":{"start":{"line":539,"column":4},"end":{"line":545,"column":5}},"92":{"start":{"line":541,"column":6},"end":{"line":541,"column":23}},"93":{"start":{"line":542,"column":6},"end":{"line":542,"column":33}},"94":{"start":{"line":543,"column":6},"end":{"line":543,"column":23}},"95":{"start":{"line":544,"column":6},"end":{"line":544,"column":20}},"96":{"start":{"line":547,"column":4},"end":{"line":565,"column":5}},"97":{"start":{"line":548,"column":6},"end":{"line":552,"column":14}},"98":{"start":{"line":553,"column":6},"end":{"line":563,"column":7}},"99":{"start":{"line":554,"column":8},"end":{"line":554,"column":46}},"100":{"start":{"line":555,"column":8},"end":{"line":562,"column":9}},"101":{"start":{"line":556,"column":10},"end":{"line":556,"column":79}},"102":{"start":{"line":557,"column":10},"end":{"line":557,"column":16}},"103":{"start":{"line":558,"column":15},"end":{"line":562,"column":9}},"104":{"start":{"line":559,"column":10},"end":{"line":559,"column":16}},"105":{"start":{"line":561,"column":10},"end":{"line":561,"column":33}},"106":{"start":{"line":564,"column":6},"end":{"line":564,"column":32}},"107":{"start":{"line":568,"column":2},"end":{"line":568,"column":17}}},"branchMap":{"1":{"line":91,"type":"if","locations":[{"start":{"line":91,"column":10},"end":{"line":91,"column":10}},{"start":{"line":91,"column":10},"end":{"line":91,"column":10}}]},"2":{"line":301,"type":"if","locations":[{"start":{"line":301,"column":8},"end":{"line":301,"column":8}},{"start":{"line":301,"column":8},"end":{"line":301,"column":8}}]},"3":{"line":307,"type":"if","locations":[{"start":{"line":307,"column":13},"end":{"line":307,"column":13}},{"start":{"line":307,"column":13},"end":{"line":307,"column":13}}]},"4":{"line":307,"type":"binary-expr","locations":[{"start":{"line":307,"column":17},"end":{"line":307,"column":31}},{"start":{"line":307,"column":35},"end":{"line":307,"column":75}}]},"5":{"line":322,"type":"cond-expr","locations":[{"start":{"line":323,"column":8},"end":{"line":323,"column":35}},{"start":{"line":324,"column":8},"end":{"line":324,"column":15}}]},"6":{"line":366,"type":"if","locations":[{"start":{"line":366,"column":10},"end":{"line":366,"column":10}},{"start":{"line":366,"column":10},"end":{"line":366,"column":10}}]},"7":{"line":375,"type":"if","locations":[{"start":{"line":375,"column":10},"end":{"line":375,"column":10}},{"start":{"line":375,"column":10},"end":{"line":375,"column":10}}]},"8":{"line":381,"type":"if","locations":[{"start":{"line":381,"column":14},"end":{"line":381,"column":14}},{"start":{"line":381,"column":14},"end":{"line":381,"column":14}}]},"9":{"line":382,"type":"binary-expr","locations":[{"start":{"line":382,"column":16},"end":{"line":382,"column":47}},{"start":{"line":384,"column":16},"end":{"line":384,"column":44}},{"start":{"line":385,"column":16},"end":{"line":385,"column":43}}]},"10":{"line":396,"type":"if","locations":[{"start":{"line":396,"column":10},"end":{"line":396,"column":10}},{"start":{"line":396,"column":10},"end":{"line":396,"column":10}}]},"11":{"line":400,"type":"if","locations":[{"start":{"line":400,"column":8},"end":{"line":400,"column":8}},{"start":{"line":400,"column":8},"end":{"line":400,"column":8}}]},"12":{"line":402,"type":"if","locations":[{"start":{"line":402,"column":10},"end":{"line":402,"column":10}},{"start":{"line":402,"column":10},"end":{"line":402,"column":10}}]},"13":{"line":436,"type":"if","locations":[{"start":{"line":436,"column":8},"end":{"line":436,"column":8}},{"start":{"line":436,"column":8},"end":{"line":436,"column":8}}]},"14":{"line":453,"type":"if","locations":[{"start":{"line":453,"column":12},"end":{"line":453,"column":12}},{"start":{"line":453,"column":12},"end":{"line":453,"column":12}}]},"15":{"line":454,"type":"binary-expr","locations":[{"start":{"line":454,"column":14},"end":{"line":454,"column":45}},{"start":{"line":456,"column":14},"end":{"line":456,"column":42}},{"start":{"line":457,"column":14},"end":{"line":457,"column":54}}]},"16":{"line":494,"type":"cond-expr","locations":[{"start":{"line":495,"column":8},"end":{"line":495,"column":27}},{"start":{"line":496,"column":8},"end":{"line":496,"column":13}}]},"17":{"line":506,"type":"cond-expr","locations":[{"start":{"line":507,"column":12},"end":{"line":507,"column":35}},{"start":{"line":507,"column":38},"end":{"line":507,"column":47}}]},"18":{"line":508,"type":"if","locations":[{"start":{"line":508,"column":6},"end":{"line":508,"column":6}},{"start":{"line":508,"column":6},"end":{"line":508,"column":6}}]},"19":{"line":519,"type":"if","locations":[{"start":{"line":519,"column":6},"end":{"line":519,"column":6}},{"start":{"line":519,"column":6},"end":{"line":519,"column":6}}]},"20":{"line":519,"type":"binary-expr","locations":[{"start":{"line":519,"column":10},"end":{"line":519,"column":14}},{"start":{"line":519,"column":18},"end":{"line":519,"column":43}}]},"21":{"line":524,"type":"cond-expr","locations":[{"start":{"line":524,"column":41},"end":{"line":524,"column":52}},{"start":{"line":524,"column":55},"end":{"line":524,"column":64}}]},"22":{"line":525,"type":"binary-expr","locations":[{"start":{"line":525,"column":20},"end":{"line":525,"column":32}},{"start":{"line":525,"column":36},"end":{"line":525,"column":60}}]},"23":{"line":526,"type":"cond-expr","locations":[{"start":{"line":526,"column":59},"end":{"line":526,"column":73}},{"start":{"line":526,"column":76},"end":{"line":526,"column":86}}]},"24":{"line":527,"type":"cond-expr","locations":[{"start":{"line":527,"column":51},"end":{"line":527,"column":59}},{"start":{"line":527,"column":62},"end":{"line":527,"column":74}}]},"25":{"line":528,"type":"binary-expr","locations":[{"start":{"line":528,"column":20},"end":{"line":528,"column":27}},{"start":{"line":528,"column":31},"end":{"line":528,"column":42}}]},"26":{"line":529,"type":"binary-expr","locations":[{"start":{"line":529,"column":20},"end":{"line":529,"column":30}},{"start":{"line":529,"column":34},"end":{"line":529,"column":78}}]},"27":{"line":529,"type":"binary-expr","locations":[{"start":{"line":529,"column":53},"end":{"line":529,"column":61}},{"start":{"line":529,"column":65},"end":{"line":529,"column":77}}]},"28":{"line":530,"type":"binary-expr","locations":[{"start":{"line":530,"column":20},"end":{"line":530,"column":33}},{"start":{"line":530,"column":37},"end":{"line":530,"column":54}}]},"29":{"line":531,"type":"binary-expr","locations":[{"start":{"line":531,"column":20},"end":{"line":531,"column":31}},{"start":{"line":531,"column":35},"end":{"line":531,"column":50}}]},"30":{"line":555,"type":"if","locations":[{"start":{"line":555,"column":8},"end":{"line":555,"column":8}},{"start":{"line":555,"column":8},"end":{"line":555,"column":8}}]},"31":{"line":558,"type":"if","locations":[{"start":{"line":558,"column":15},"end":{"line":558,"column":15}},{"start":{"line":558,"column":15},"end":{"line":558,"column":15}}]},"32":{"line":558,"type":"binary-expr","locations":[{"start":{"line":558,"column":19},"end":{"line":558,"column":30}},{"start":{"line":558,"column":34},"end":{"line":558,"column":45}}]},"33":{"line":564,"type":"binary-expr","locations":[{"start":{"line":564,"column":20},"end":{"line":564,"column":23}},{"start":{"line":564,"column":27},"end":{"line":564,"column":30}}]}},"code":["define(function () {","  /*jslint indent: 2, browser: true, bitwise: true, plusplus: true */","  var twemoji = (function (","    /*! Copyright Twitter Inc. and other contributors. Licensed under MIT *//*","      https://github.com/twitter/twemoji/blob/gh-pages/LICENSE","    */","","    // WARNING:   this file is generated automatically via","    //            `node twemoji-generator.js`","    //            please update its `createTwemoji` function","    //            at the bottom of the same file instead.","","  ) {","    'use strict';","","    /*jshint maxparams:4 */","","    var","      // the exported module object","      twemoji = {","","","      /////////////////////////","      //      properties     //","      /////////////////////////","","        // default assets url, by default will be Twitter Inc. CDN","        base: 'https://twemoji.maxcdn.com/2/',","","        // default assets file extensions, by default '.png'","        ext: '.png',","","        // default assets/folder size, by default \"72x72\"","        // available via Twitter CDN: 72","        size: '72x72',","","        // default class name, by default 'emoji'","        className: 'emoji',","","        // basic utilities / helpers to convert code points","        // to JavaScript surrogates and vice versa","        convert: {","","          /**","           * Given an HEX codepoint, returns UTF16 surrogate pairs.","           *","           * @param   string  generic codepoint, i.e. '1F4A9'","           * @return  string  codepoint transformed into utf16 surrogates pair,","           *          i.e. \\uD83D\\uDCA9","           *","           * @example","           *  twemoji.convert.fromCodePoint('1f1e8');","           *  // \"\\ud83c\\udde8\"","           *","           *  '1f1e8-1f1f3'.split('-').map(twemoji.convert.fromCodePoint).join('')","           *  // \"\\ud83c\\udde8\\ud83c\\uddf3\"","           */","          fromCodePoint: fromCodePoint,","","          /**","           * Given UTF16 surrogate pairs, returns the equivalent HEX codepoint.","           *","           * @param   string  generic utf16 surrogates pair, i.e. \\uD83D\\uDCA9","           * @param   string  optional separator for double code points, default='-'","           * @return  string  utf16 transformed into codepoint, i.e. '1F4A9'","           *","           * @example","           *  twemoji.convert.toCodePoint('\\ud83c\\udde8\\ud83c\\uddf3');","           *  // \"1f1e8-1f1f3\"","           *","           *  twemoji.convert.toCodePoint('\\ud83c\\udde8\\ud83c\\uddf3', '~');","           *  // \"1f1e8~1f1f3\"","           */","          toCodePoint: toCodePoint","        },","","","      /////////////////////////","      //       methods       //","      /////////////////////////","","        /**","         * User first: used to remove missing images","         * preserving the original text intent when","         * a fallback for network problems is desired.","         * Automatically added to Image nodes via DOM","         * It could be recycled for string operations via:","         *  $('img.emoji').on('error', twemoji.onerror)","         */","        onerror: function onerror() {","          if (this.parentNode) {","            this.parentNode.replaceChild(createText(this.alt), this);","          }","        },","","        /**","         * Main method/logic to generate either <img> tags or HTMLImage nodes.","         *  \"emojify\" a generic text or DOM Element.","         *","         * @overloads","         *","         * String replacement for `innerHTML` or server side operations","         *  twemoji.parse(string);","         *  twemoji.parse(string, Function);","         *  twemoji.parse(string, Object);","         *","         * HTMLElement tree parsing for safer operations over existing DOM","         *  twemoji.parse(HTMLElement);","         *  twemoji.parse(HTMLElement, Function);","         *  twemoji.parse(HTMLElement, Object);","         *","         * @param   string|HTMLElement  the source to parse and enrich with emoji.","         *","         *          string              replace emoji matches with <img> tags.","         *                              Mainly used to inject emoji via `innerHTML`","         *                              It does **not** parse the string or validate it,","         *                              it simply replaces found emoji with a tag.","         *                              NOTE: be sure this won't affect security.","         *","         *          HTMLElement         walk through the DOM tree and find emoji","         *                              that are inside **text node only** (nodeType === 3)","         *                              Mainly used to put emoji in already generated DOM","         *                              without compromising surrounding nodes and","         *                              **avoiding** the usage of `innerHTML`.","         *                              NOTE: Using DOM elements instead of strings should","         *                              improve security without compromising too much","         *                              performance compared with a less safe `innerHTML`.","         *","         * @param   Function|Object  [optional]","         *                              either the callback that will be invoked or an object","         *                              with all properties to use per each found emoji.","         *","         *          Function            if specified, this will be invoked per each emoji","         *                              that has been found through the RegExp except","         *                              those follwed by the invariant \\uFE0E (\"as text\").","         *                              Once invoked, parameters will be:","         *","         *                                iconId:string     the lower case HEX code point","         *                                                  i.e. \"1f4a9\"","         *","         *                                options:Object    all info for this parsing operation","         *","         *                                variant:char      the optional \\uFE0F (\"as image\")","         *                                                  variant, in case this info","         *                                                  is anyhow meaningful.","         *                                                  By default this is ignored.","         *","         *                              If such callback will return a falsy value instead","         *                              of a valid `src` to use for the image, nothing will","         *                              actually change for that specific emoji.","         *","         *","         *          Object              if specified, an object containing the following properties","         *","         *            callback   Function  the callback to invoke per each found emoji.","         *            base       string    the base url, by default twemoji.base","         *            ext        string    the image extension, by default twemoji.ext","         *            size       string    the assets size, by default twemoji.size","         *","         * @example","         *","         *  twemoji.parse(\"I \\u2764\\uFE0F emoji!\");","         *  // I <img class=\"emoji\" draggable=\"false\" alt=\"❤️\" src=\"/assets/2764.gif\"> emoji!","         *","         *","         *  twemoji.parse(\"I \\u2764\\uFE0F emoji!\", function(iconId, options) {","         *    return '/assets/' + iconId + '.gif';","         *  });","         *  // I <img class=\"emoji\" draggable=\"false\" alt=\"❤️\" src=\"/assets/2764.gif\"> emoji!","         *","         *","         * twemoji.parse(\"I \\u2764\\uFE0F emoji!\", {","         *   size: 72,","         *   callback: function(iconId, options) {","         *     return '/assets/' + options.size + '/' + iconId + options.ext;","         *   }","         * });","         *  // I <img class=\"emoji\" draggable=\"false\" alt=\"❤️\" src=\"/assets/72x72/2764.png\"> emoji!","         *","         */","        parse: parse,","","        /**","         * Given a string, invokes the callback argument","         *  per each emoji found in such string.","         * This is the most raw version used by","         *  the .parse(string) method itself.","         *","         * @param   string    generic string to parse","         * @param   Function  a generic callback that will be","         *                    invoked to replace the content.","         *                    This calback wil receive standard","         *                    String.prototype.replace(str, callback)","         *                    arguments such:","         *  callback(","         *    rawText,  // the emoji match","         *  );","         *","         *                    and others commonly received via replace.","         */","        replace: replace,","","        /**","         * Simplify string tests against emoji.","         *","         * @param   string  some text that might contain emoji","         * @return  boolean true if any emoji was found, false otherwise.","         *","         * @example","         *","         *  if (twemoji.test(someContent)) {","         *    console.log(\"emoji All The Things!\");","         *  }","         */","        test: test","      },","","      // used to escape HTML special chars in attributes","      escaper = {","        '&': '&amp;',","        '<': '&lt;',","        '>': '&gt;',","        \"'\": '&#39;',","        '\"': '&quot;'","      },","","      // RegExp based on emoji's official Unicode standards","      // http://www.unicode.org/Public/UNIDATA/EmojiSources.txt","      re = /\\ud83d[\\udc68-\\udc69](?:\\ud83c[\\udffb-\\udfff])?\\u200d(?:\\u2695\\ufe0f|\\u2696\\ufe0f|\\u2708\\ufe0f|\\ud83c[\\udf3e\\udf73\\udf93\\udfa4\\udfa8\\udfeb\\udfed]|\\ud83d[\\udcbb\\udcbc\\udd27\\udd2c\\ude80\\ude92])|(?:\\ud83c[\\udfcb\\udfcc]|\\ud83d\\udd75|\\u26f9)(?:\\ufe0f|\\ud83c[\\udffb-\\udfff])\\u200d[\\u2640\\u2642]\\ufe0f|(?:\\ud83c[\\udfc3\\udfc4\\udfca]|\\ud83d[\\udc6e\\udc71\\udc73\\udc77\\udc81\\udc82\\udc86\\udc87\\ude45-\\ude47\\ude4b\\ude4d\\ude4e\\udea3\\udeb4-\\udeb6]|\\ud83e[\\udd26\\udd37-\\udd39\\udd3d\\udd3e])(?:\\ud83c[\\udffb-\\udfff])?\\u200d[\\u2640\\u2642]\\ufe0f|\\ud83d\\udc68\\u200d\\u2764\\ufe0f\\u200d\\ud83d\\udc8b\\u200d\\ud83d\\udc68|\\ud83d\\udc68\\u200d\\ud83d\\udc68\\u200d\\ud83d\\udc66\\u200d\\ud83d\\udc66|\\ud83d\\udc68\\u200d\\ud83d\\udc68\\u200d\\ud83d\\udc67\\u200d\\ud83d[\\udc66\\udc67]|\\ud83d\\udc68\\u200d\\ud83d\\udc69\\u200d\\ud83d\\udc66\\u200d\\ud83d\\udc66|\\ud83d\\udc68\\u200d\\ud83d\\udc69\\u200d\\ud83d\\udc67\\u200d\\ud83d[\\udc66\\udc67]|\\ud83d\\udc69\\u200d\\u2764\\ufe0f\\u200d\\ud83d\\udc8b\\u200d\\ud83d[\\udc68\\udc69]|\\ud83d\\udc69\\u200d\\ud83d\\udc69\\u200d\\ud83d\\udc66\\u200d\\ud83d\\udc66|\\ud83d\\udc69\\u200d\\ud83d\\udc69\\u200d\\ud83d\\udc67\\u200d\\ud83d[\\udc66\\udc67]|\\ud83d\\udc68\\u200d\\u2764\\ufe0f\\u200d\\ud83d\\udc68|\\ud83d\\udc68\\u200d\\ud83d\\udc66\\u200d\\ud83d\\udc66|\\ud83d\\udc68\\u200d\\ud83d\\udc67\\u200d\\ud83d[\\udc66\\udc67]|\\ud83d\\udc68\\u200d\\ud83d\\udc68\\u200d\\ud83d[\\udc66\\udc67]|\\ud83d\\udc68\\u200d\\ud83d\\udc69\\u200d\\ud83d[\\udc66\\udc67]|\\ud83d\\udc69\\u200d\\u2764\\ufe0f\\u200d\\ud83d[\\udc68\\udc69]|\\ud83d\\udc69\\u200d\\ud83d\\udc66\\u200d\\ud83d\\udc66|\\ud83d\\udc69\\u200d\\ud83d\\udc67\\u200d\\ud83d[\\udc66\\udc67]|\\ud83d\\udc69\\u200d\\ud83d\\udc69\\u200d\\ud83d[\\udc66\\udc67]|\\ud83c\\udff3\\ufe0f\\u200d\\ud83c\\udf08|\\ud83c\\udff4\\u200d\\u2620\\ufe0f|\\ud83d\\udc41\\u200d\\ud83d\\udde8|\\ud83d\\udc68\\u200d\\ud83d[\\udc66\\udc67]|\\ud83d\\udc69\\u200d\\ud83d[\\udc66\\udc67]|\\ud83d\\udc6f\\u200d\\u2640\\ufe0f|\\ud83d\\udc6f\\u200d\\u2642\\ufe0f|\\ud83e\\udd3c\\u200d\\u2640\\ufe0f|\\ud83e\\udd3c\\u200d\\u2642\\ufe0f|(?:[\\u0023\\u002a\\u0030-\\u0039])\\ufe0f?\\u20e3|(?:(?:\\ud83c[\\udfcb\\udfcc]|\\ud83d[\\udd74\\udd75\\udd90]|[\\u261d\\u26f7\\u26f9\\u270c\\u270d])(?:\\ufe0f|(?!\\ufe0e))|\\ud83c[\\udf85\\udfc2-\\udfc4\\udfc7\\udfca]|\\ud83d[\\udc42\\udc43\\udc46-\\udc50\\udc66-\\udc69\\udc6e\\udc70-\\udc78\\udc7c\\udc81-\\udc83\\udc85-\\udc87\\udcaa\\udd7a\\udd95\\udd96\\ude45-\\ude47\\ude4b-\\ude4f\\udea3\\udeb4-\\udeb6\\udec0\\udecc]|\\ud83e[\\udd18-\\udd1c\\udd1e\\udd26\\udd30\\udd33-\\udd39\\udd3d\\udd3e]|[\\u270a\\u270b])(?:\\ud83c[\\udffb-\\udfff]|)|\\ud83c\\udde6\\ud83c[\\udde8-\\uddec\\uddee\\uddf1\\uddf2\\uddf4\\uddf6-\\uddfa\\uddfc\\uddfd\\uddff]|\\ud83c\\udde7\\ud83c[\\udde6\\udde7\\udde9-\\uddef\\uddf1-\\uddf4\\uddf6-\\uddf9\\uddfb\\uddfc\\uddfe\\uddff]|\\ud83c\\udde8\\ud83c[\\udde6\\udde8\\udde9\\uddeb-\\uddee\\uddf0-\\uddf5\\uddf7\\uddfa-\\uddff]|\\ud83c\\udde9\\ud83c[\\uddea\\uddec\\uddef\\uddf0\\uddf2\\uddf4\\uddff]|\\ud83c\\uddea\\ud83c[\\udde6\\udde8\\uddea\\uddec\\udded\\uddf7-\\uddfa]|\\ud83c\\uddeb\\ud83c[\\uddee-\\uddf0\\uddf2\\uddf4\\uddf7]|\\ud83c\\uddec\\ud83c[\\udde6\\udde7\\udde9-\\uddee\\uddf1-\\uddf3\\uddf5-\\uddfa\\uddfc\\uddfe]|\\ud83c\\udded\\ud83c[\\uddf0\\uddf2\\uddf3\\uddf7\\uddf9\\uddfa]|\\ud83c\\uddee\\ud83c[\\udde8-\\uddea\\uddf1-\\uddf4\\uddf6-\\uddf9]|\\ud83c\\uddef\\ud83c[\\uddea\\uddf2\\uddf4\\uddf5]|\\ud83c\\uddf0\\ud83c[\\uddea\\uddec-\\uddee\\uddf2\\uddf3\\uddf5\\uddf7\\uddfc\\uddfe\\uddff]|\\ud83c\\uddf1\\ud83c[\\udde6-\\udde8\\uddee\\uddf0\\uddf7-\\uddfb\\uddfe]|\\ud83c\\uddf2\\ud83c[\\udde6\\udde8-\\udded\\uddf0-\\uddff]|\\ud83c\\uddf3\\ud83c[\\udde6\\udde8\\uddea-\\uddec\\uddee\\uddf1\\uddf4\\uddf5\\uddf7\\uddfa\\uddff]|\\ud83c\\uddf4\\ud83c\\uddf2|\\ud83c\\uddf5\\ud83c[\\udde6\\uddea-\\udded\\uddf0-\\uddf3\\uddf7-\\uddf9\\uddfc\\uddfe]|\\ud83c\\uddf6\\ud83c\\udde6|\\ud83c\\uddf7\\ud83c[\\uddea\\uddf4\\uddf8\\uddfa\\uddfc]|\\ud83c\\uddf8\\ud83c[\\udde6-\\uddea\\uddec-\\uddf4\\uddf7-\\uddf9\\uddfb\\uddfd-\\uddff]|\\ud83c\\uddf9\\ud83c[\\udde6\\udde8\\udde9\\uddeb-\\udded\\uddef-\\uddf4\\uddf7\\uddf9\\uddfb\\uddfc\\uddff]|\\ud83c\\uddfa\\ud83c[\\udde6\\uddec\\uddf2\\uddf3\\uddf8\\uddfe\\uddff]|\\ud83c\\uddfb\\ud83c[\\udde6\\udde8\\uddea\\uddec\\uddee\\uddf3\\uddfa]|\\ud83c\\uddfc\\ud83c[\\uddeb\\uddf8]|\\ud83c\\uddfd\\ud83c\\uddf0|\\ud83c\\uddfe\\ud83c[\\uddea\\uddf9]|\\ud83c\\uddff\\ud83c[\\udde6\\uddf2\\uddfc]|\\ud800\\udc00|\\ud83c[\\udccf\\udd8e\\udd91-\\udd9a\\udde6-\\uddff\\ude01\\ude32-\\ude36\\ude38-\\ude3a\\ude50\\ude51\\udf00-\\udf20\\udf2d-\\udf35\\udf37-\\udf7c\\udf7e-\\udf84\\udf86-\\udf93\\udfa0-\\udfc1\\udfc5\\udfc6\\udfc8\\udfc9\\udfcf-\\udfd3\\udfe0-\\udff0\\udff4\\udff8-\\udfff]|\\ud83d[\\udc00-\\udc3e\\udc40\\udc44\\udc45\\udc51-\\udc65\\udc6a-\\udc6d\\udc6f\\udc79-\\udc7b\\udc7d-\\udc80\\udc84\\udc88-\\udca9\\udcab-\\udcfc\\udcff-\\udd3d\\udd4b-\\udd4e\\udd50-\\udd67\\udda4\\uddfb-\\ude44\\ude48-\\ude4a\\ude80-\\udea2\\udea4-\\udeb3\\udeb7-\\udebf\\udec1-\\udec5\\uded0-\\uded2\\udeeb\\udeec\\udef4-\\udef6]|\\ud83e[\\udd10-\\udd17\\udd1d\\udd20-\\udd25\\udd27\\udd3a\\udd3c\\udd40-\\udd45\\udd47-\\udd4b\\udd50-\\udd5e\\udd80-\\udd91\\uddc0]|[\\u23e9-\\u23ec\\u23f0\\u23f3\\u2640\\u2642\\u2695\\u26ce\\u2705\\u2728\\u274c\\u274e\\u2753-\\u2755\\u2795-\\u2797\\u27b0\\u27bf\\ue50a]|(?:\\ud83c[\\udc04\\udd70\\udd71\\udd7e\\udd7f\\ude02\\ude1a\\ude2f\\ude37\\udf21\\udf24-\\udf2c\\udf36\\udf7d\\udf96\\udf97\\udf99-\\udf9b\\udf9e\\udf9f\\udfcd\\udfce\\udfd4-\\udfdf\\udff3\\udff5\\udff7]|\\ud83d[\\udc3f\\udc41\\udcfd\\udd49\\udd4a\\udd6f\\udd70\\udd73\\udd76-\\udd79\\udd87\\udd8a-\\udd8d\\udda5\\udda8\\uddb1\\uddb2\\uddbc\\uddc2-\\uddc4\\uddd1-\\uddd3\\udddc-\\uddde\\udde1\\udde3\\udde8\\uddef\\uddf3\\uddfa\\udecb\\udecd-\\udecf\\udee0-\\udee5\\udee9\\udef0\\udef3]|[\\u00a9\\u00ae\\u203c\\u2049\\u2122\\u2139\\u2194-\\u2199\\u21a9\\u21aa\\u231a\\u231b\\u2328\\u23cf\\u23ed-\\u23ef\\u23f1\\u23f2\\u23f8-\\u23fa\\u24c2\\u25aa\\u25ab\\u25b6\\u25c0\\u25fb-\\u25fe\\u2600-\\u2604\\u260e\\u2611\\u2614\\u2615\\u2618\\u2620\\u2622\\u2623\\u2626\\u262a\\u262e\\u262f\\u2638-\\u263a\\u2648-\\u2653\\u2660\\u2663\\u2665\\u2666\\u2668\\u267b\\u267f\\u2692-\\u2694\\u2696\\u2697\\u2699\\u269b\\u269c\\u26a0\\u26a1\\u26aa\\u26ab\\u26b0\\u26b1\\u26bd\\u26be\\u26c4\\u26c5\\u26c8\\u26cf\\u26d1\\u26d3\\u26d4\\u26e9\\u26ea\\u26f0-\\u26f5\\u26f8\\u26fa\\u26fd\\u2702\\u2708\\u2709\\u270f\\u2712\\u2714\\u2716\\u271d\\u2721\\u2733\\u2734\\u2744\\u2747\\u2757\\u2763\\u2764\\u27a1\\u2934\\u2935\\u2b05-\\u2b07\\u2b1b\\u2b1c\\u2b50\\u2b55\\u3030\\u303d\\u3297\\u3299])(?:\\ufe0f|(?!\\ufe0e))/g,","","      // avoid runtime RegExp creation for not so smart,","      // not JIT based, and old browsers / engines","      UFE0Fg = /\\uFE0F/g,","","      // avoid using a string literal like '\\u200D' here because minifiers expand it inline","      U200D = String.fromCharCode(0x200D),","","      // used to find HTML special chars in attributes","      rescaper = /[&<>'\"]/g,","","      // nodes with type 1 which should **not** be parsed (including lower case svg)","      shouldntBeParsed = /IFRAME|NOFRAMES|NOSCRIPT|SCRIPT|SELECT|STYLE|TEXTAREA|[a-z]/,","","      // just a private shortcut","      fromCharCode = String.fromCharCode;","","    return twemoji;","","","    /////////////////////////","    //  private functions  //","    //     declaration     //","    /////////////////////////","","    /**","     * Shortcut to create text nodes","     * @param   string  text used to create DOM text node","     * @return  Node  a DOM node with that text","     */","    function createText(text) {","      return document.createTextNode(text);","    }","","    /**","     * Utility function to escape html attribute text","     * @param   string  text use in HTML attribute","     * @return  string  text encoded to use in HTML attribute","     */","    function escapeHTML(s) {","      return s.replace(rescaper, replacer);","    }","","    /**","     * Default callback used to generate emoji src","     *  based on Twitter CDN","     * @param   string    the emoji codepoint string","     * @param   string    the default size to use, i.e. \"36x36\"","     * @return  string    the image source to use","     */","    function defaultImageSrcGenerator(icon, options) {","      return ''.concat(options.base, options.size, '/', icon, options.ext);","    }","","    /**","     * Given a generic DOM nodeType 1, walk through all children","     * and store every nodeType 3 (#text) found in the tree.","     * @param   Element a DOM Element with probably some text in it","     * @param   Array the list of previously discovered text nodes","     * @return  Array same list with new discovered nodes, if any","     */","    function grabAllTextNodes(node, allText) {","      var","        childNodes = node.childNodes,","        length = childNodes.length,","        subnode,","        nodeType;","      while (length--) {","        subnode = childNodes[length];","        nodeType = subnode.nodeType;","        // parse emoji only in text nodes","        if (nodeType === 3) {","          // collect them to process emoji later","          allText.push(subnode);","        }","        // ignore all nodes that are not type 1 or that","        // should not be parsed as script, style, and others","        else if (nodeType === 1 && !shouldntBeParsed.test(subnode.nodeName)) {","          grabAllTextNodes(subnode, allText);","        }","      }","      return allText;","    }","","    /**","     * Used to both remove the possible variant","     *  and to convert utf16 into code points.","     *  If there is a zero-width-joiner (U+200D), leave the variants in.","     * @param   string    the raw text of the emoji match","     */","    function grabTheRightIcon(rawText) {","      // if variant is present as \\uFE0F","      return toCodePoint(rawText.indexOf(U200D) < 0 ?","        rawText.replace(UFE0Fg, '') :","        rawText","      );","    }","","    /**","     * DOM version of the same logic / parser:","     *  emojify all found sub-text nodes placing images node instead.","     * @param   Element   generic DOM node with some text in some child node","     * @param   Object    options  containing info about how to parse","      *","      *            .callback   Function  the callback to invoke per each found emoji.","      *            .base       string    the base url, by default twemoji.base","      *            .ext        string    the image extension, by default twemoji.ext","      *            .size       string    the assets size, by default twemoji.size","      *","     * @return  Element same generic node with emoji in place, if any.","     */","    function parseNode(node, options) {","      var","        allText = grabAllTextNodes(node, []),","        length = allText.length,","        attrib,","        attrname,","        modified,","        fragment,","        subnode,","        text,","        match,","        i,","        index,","        img,","        rawText,","        iconId,","        src;","      while (length--) {","        modified = false;","        fragment = document.createDocumentFragment();","        subnode = allText[length];","        text = subnode.nodeValue;","        i = 0;","        while ((match = re.exec(text))) {","          index = match.index;","          if (index !== i) {","            fragment.appendChild(","              createText(text.slice(i, index))","            );","          }","          rawText = match[0];","          iconId = grabTheRightIcon(rawText);","          i = index + rawText.length;","          src = options.callback(iconId, options);","          if (src) {","            img = new Image();","            img.onerror = options.onerror;","            img.setAttribute('draggable', 'false');","            attrib = options.attributes(rawText, iconId);","            for (attrname in attrib) {","              if (","                attrib.hasOwnProperty(attrname) &&","                // don't allow any handlers to be set + don't allow overrides","                attrname.indexOf('on') !== 0 &&","                !img.hasAttribute(attrname)","              ) {","                img.setAttribute(attrname, attrib[attrname]);","              }","            }","            img.className = options.className;","            img.alt = rawText;","            img.src = src;","            modified = true;","            fragment.appendChild(img);","          }","          if (!img) fragment.appendChild(createText(rawText));","          img = null;","        }","        // is there actually anything to replace in here ?","        if (modified) {","          // any text left to be added ?","          if (i < text.length) {","            fragment.appendChild(","              createText(text.slice(i))","            );","          }","          // replace the text node only, leave intact","          // anything else surrounding such text","          subnode.parentNode.replaceChild(fragment, subnode);","        }","      }","      return node;","    }","","    /**","     * String/HTML version of the same logic / parser:","     *  emojify a generic text placing images tags instead of surrogates pair.","     * @param   string    generic string with possibly some emoji in it","     * @param   Object    options  containing info about how to parse","     *","     *            .callback   Function  the callback to invoke per each found emoji.","     *            .base       string    the base url, by default twemoji.base","     *            .ext        string    the image extension, by default twemoji.ext","     *            .size       string    the assets size, by default twemoji.size","     *","     * @return  the string with <img tags> replacing all found and parsed emoji","     */","    function parseString(str, options) {","      return replace(str, function (rawText) {","        var","          ret = rawText,","          iconId = grabTheRightIcon(rawText),","          src = options.callback(iconId, options),","          attrib,","          attrname;","        if (src) {","          // recycle the match string replacing the emoji","          // with its image counter part","          ret = '<img '.concat(","            'class=\"', options.className, '\" ',","            'draggable=\"false\" ',","            // needs to preserve user original intent","            // when variants should be copied and pasted too","            'alt=\"',","            rawText,","            '\"',","            ' src=\"',","            src,","            '\"'","          );","          attrib = options.attributes(rawText, iconId);","          for (attrname in attrib) {","            if (","              attrib.hasOwnProperty(attrname) &&","              // don't allow any handlers to be set + don't allow overrides","              attrname.indexOf('on') !== 0 &&","              ret.indexOf(' ' + attrname + '=') === -1","            ) {","              ret = ret.concat(' ', attrname, '=\"', escapeHTML(attrib[attrname]), '\"');","            }","          }","          ret = ret.concat('>');","        }","        return ret;","      });","    }","","    /**","     * Function used to actually replace HTML special chars","     * @param   string  HTML special char","     * @return  string  encoded HTML special char","     */","    function replacer(m) {","      return escaper[m];","    }","","    /**","     * Default options.attribute callback","     * @return  null","     */","    function returnNull() {","      return null;","    }","","    /**","     * Given a generic value, creates its squared counterpart if it's a number.","     *  As example, number 36 will return '36x36'.","     * @param   any     a generic value.","     * @return  any     a string representing asset size, i.e. \"36x36\"","     *                  only in case the value was a number.","     *                  Returns initial value otherwise.","     */","    function toSizeSquaredAsset(value) {","      return typeof value === 'number' ?","        value + 'x' + value :","        value;","    }","","","    /////////////////////////","    //  exported functions //","    //     declaration     //","    /////////////////////////","","    function fromCodePoint(codepoint) {","      var code = typeof codepoint === 'string' ?","            parseInt(codepoint, 16) : codepoint;","      if (code < 0x10000) {","        return fromCharCode(code);","      }","      code -= 0x10000;","      return fromCharCode(","        0xD800 + (code >> 10),","        0xDC00 + (code & 0x3FF)","      );","    }","","    function parse(what, how) {","      if (!how || typeof how === 'function') {","        how = {callback: how};","      }","      // if first argument is string, inject html <img> tags","      // otherwise use the DOM tree and parse text nodes only","      return (typeof what === 'string' ? parseString : parseNode)(what, {","        callback:   how.callback || defaultImageSrcGenerator,","        attributes: typeof how.attributes === 'function' ? how.attributes : returnNull,","        base:       typeof how.base === 'string' ? how.base : twemoji.base,","        ext:        how.ext || twemoji.ext,","        size:       how.folder || toSizeSquaredAsset(how.size || twemoji.size),","        className:  how.className || twemoji.className,","        onerror:    how.onerror || twemoji.onerror","      });","    }","","    function replace(text, callback) {","      return String(text).replace(re, callback);","    }","","    function test(text) {","      // IE6 needs a reset before too","      re.lastIndex = 0;","      var result = re.test(text);","      re.lastIndex = 0;","      return result;","    }","","    function toCodePoint(unicodeSurrogates, sep) {","      var","        r = [],","        c = 0,","        p = 0,","        i = 0;","      while (i < unicodeSurrogates.length) {","        c = unicodeSurrogates.charCodeAt(i++);","        if (p) {","          r.push((0x10000 + ((p - 0xD800) << 10) + (c - 0xDC00)).toString(16));","          p = 0;","        } else if (0xD800 <= c && c <= 0xDBFF) {","          p = c;","        } else {","          r.push(c.toString(16));","        }","      }","      return r.join(sep || '-');","    }","","  }());","  return twemoji;","});"],"l":{"1":2,"3":0,"18":0,"91":0,"92":0,"247":0,"260":1,"261":0,"269":1,"270":0,"280":1,"281":0,"291":1,"292":0,"297":0,"298":0,"299":0,"301":0,"303":0,"307":0,"308":0,"311":0,"320":1,"322":0,"341":1,"342":0,"358":0,"359":0,"360":0,"361":0,"362":0,"363":0,"364":0,"365":0,"366":0,"367":0,"371":0,"372":0,"373":0,"374":0,"375":0,"376":0,"377":0,"378":0,"379":0,"380":0,"381":0,"387":0,"390":0,"391":0,"392":0,"393":0,"394":0,"396":0,"397":0,"400":0,"402":0,"403":0,"409":0,"412":0,"428":1,"429":0,"430":0,"436":0,"439":0,"451":0,"452":0,"453":0,"459":0,"462":0,"464":0,"473":1,"474":0,"481":1,"482":0,"493":1,"494":0,"505":1,"506":0,"508":0,"509":0,"511":0,"512":0,"518":1,"519":0,"520":0,"524":0,"535":1,"536":0,"539":1,"541":0,"542":0,"543":0,"544":0,"547":1,"548":0,"553":0,"554":0,"555":0,"556":0,"557":0,"558":0,"559":0,"561":0,"564":0,"568":0}},"/home/travis/build/npmtest/node-npmtest-twemoji/node_modules/twemoji/2/twemoji.js":{"path":"/home/travis/build/npmtest/node-npmtest-twemoji/node_modules/twemoji/2/twemoji.js","s":{"1":1,"2":1,"3":0,"4":0,"5":1,"6":1,"7":0,"8":1,"9":0,"10":1,"11":0,"12":1,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":1,"23":0,"24":1,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":1,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":1,"73":0,"74":1,"75":0,"76":1,"77":0,"78":1,"79":0,"80":0,"81":0,"82":0,"83":0,"84":1,"85":0,"86":0,"87":0,"88":1,"89":0,"90":1,"91":0,"92":0,"93":0,"94":0,"95":1,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0]},"f":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0},"fnMap":{"1":{"name":"(anonymous_1)","line":2,"loc":{"start":{"line":2,"column":15},"end":{"line":12,"column":2}}},"2":{"name":"onerror","line":89,"loc":{"start":{"line":89,"column":15},"end":{"line":89,"column":34}}},"3":{"name":"createText","line":259,"loc":{"start":{"line":259,"column":2},"end":{"line":259,"column":28}}},"4":{"name":"escapeHTML","line":268,"loc":{"start":{"line":268,"column":2},"end":{"line":268,"column":25}}},"5":{"name":"defaultImageSrcGenerator","line":279,"loc":{"start":{"line":279,"column":2},"end":{"line":279,"column":51}}},"6":{"name":"grabAllTextNodes","line":290,"loc":{"start":{"line":290,"column":2},"end":{"line":290,"column":43}}},"7":{"name":"grabTheRightIcon","line":319,"loc":{"start":{"line":319,"column":2},"end":{"line":319,"column":37}}},"8":{"name":"parseNode","line":340,"loc":{"start":{"line":340,"column":2},"end":{"line":340,"column":36}}},"9":{"name":"parseString","line":427,"loc":{"start":{"line":427,"column":2},"end":{"line":427,"column":37}}},"10":{"name":"(anonymous_10)","line":428,"loc":{"start":{"line":428,"column":24},"end":{"line":428,"column":43}}},"11":{"name":"replacer","line":472,"loc":{"start":{"line":472,"column":2},"end":{"line":472,"column":23}}},"12":{"name":"returnNull","line":480,"loc":{"start":{"line":480,"column":2},"end":{"line":480,"column":24}}},"13":{"name":"toSizeSquaredAsset","line":492,"loc":{"start":{"line":492,"column":2},"end":{"line":492,"column":37}}},"14":{"name":"fromCodePoint","line":504,"loc":{"start":{"line":504,"column":2},"end":{"line":504,"column":36}}},"15":{"name":"parse","line":517,"loc":{"start":{"line":517,"column":2},"end":{"line":517,"column":28}}},"16":{"name":"replace","line":534,"loc":{"start":{"line":534,"column":2},"end":{"line":534,"column":35}}},"17":{"name":"test","line":538,"loc":{"start":{"line":538,"column":2},"end":{"line":538,"column":22}}},"18":{"name":"toCodePoint","line":546,"loc":{"start":{"line":546,"column":2},"end":{"line":546,"column":47}}}},"statementMap":{"1":{"start":{"line":2,"column":0},"end":{"line":566,"column":5}},"2":{"start":{"line":17,"column":2},"end":{"line":244,"column":39}},"3":{"start":{"line":90,"column":8},"end":{"line":92,"column":9}},"4":{"start":{"line":91,"column":10},"end":{"line":91,"column":67}},"5":{"start":{"line":246,"column":2},"end":{"line":246,"column":17}},"6":{"start":{"line":259,"column":2},"end":{"line":261,"column":3}},"7":{"start":{"line":260,"column":4},"end":{"line":260,"column":41}},"8":{"start":{"line":268,"column":2},"end":{"line":270,"column":3}},"9":{"start":{"line":269,"column":4},"end":{"line":269,"column":41}},"10":{"start":{"line":279,"column":2},"end":{"line":281,"column":3}},"11":{"start":{"line":280,"column":4},"end":{"line":280,"column":73}},"12":{"start":{"line":290,"column":2},"end":{"line":311,"column":3}},"13":{"start":{"line":291,"column":4},"end":{"line":295,"column":15}},"14":{"start":{"line":296,"column":4},"end":{"line":309,"column":5}},"15":{"start":{"line":297,"column":6},"end":{"line":297,"column":35}},"16":{"start":{"line":298,"column":6},"end":{"line":298,"column":34}},"17":{"start":{"line":300,"column":6},"end":{"line":308,"column":7}},"18":{"start":{"line":302,"column":8},"end":{"line":302,"column":30}},"19":{"start":{"line":306,"column":11},"end":{"line":308,"column":7}},"20":{"start":{"line":307,"column":8},"end":{"line":307,"column":43}},"21":{"start":{"line":310,"column":4},"end":{"line":310,"column":19}},"22":{"start":{"line":319,"column":2},"end":{"line":325,"column":3}},"23":{"start":{"line":321,"column":4},"end":{"line":324,"column":6}},"24":{"start":{"line":340,"column":2},"end":{"line":412,"column":3}},"25":{"start":{"line":341,"column":4},"end":{"line":356,"column":10}},"26":{"start":{"line":357,"column":4},"end":{"line":410,"column":5}},"27":{"start":{"line":358,"column":6},"end":{"line":358,"column":23}},"28":{"start":{"line":359,"column":6},"end":{"line":359,"column":51}},"29":{"start":{"line":360,"column":6},"end":{"line":360,"column":32}},"30":{"start":{"line":361,"column":6},"end":{"line":361,"column":31}},"31":{"start":{"line":362,"column":6},"end":{"line":362,"column":12}},"32":{"start":{"line":363,"column":6},"end":{"line":397,"column":7}},"33":{"start":{"line":364,"column":8},"end":{"line":364,"column":28}},"34":{"start":{"line":365,"column":8},"end":{"line":369,"column":9}},"35":{"start":{"line":366,"column":10},"end":{"line":368,"column":12}},"36":{"start":{"line":370,"column":8},"end":{"line":370,"column":27}},"37":{"start":{"line":371,"column":8},"end":{"line":371,"column":43}},"38":{"start":{"line":372,"column":8},"end":{"line":372,"column":35}},"39":{"start":{"line":373,"column":8},"end":{"line":373,"column":48}},"40":{"start":{"line":374,"column":8},"end":{"line":394,"column":9}},"41":{"start":{"line":375,"column":10},"end":{"line":375,"column":28}},"42":{"start":{"line":376,"column":10},"end":{"line":376,"column":40}},"43":{"start":{"line":377,"column":10},"end":{"line":377,"column":49}},"44":{"start":{"line":378,"column":10},"end":{"line":378,"column":55}},"45":{"start":{"line":379,"column":10},"end":{"line":388,"column":11}},"46":{"start":{"line":380,"column":12},"end":{"line":387,"column":13}},"47":{"start":{"line":386,"column":14},"end":{"line":386,"column":59}},"48":{"start":{"line":389,"column":10},"end":{"line":389,"column":44}},"49":{"start":{"line":390,"column":10},"end":{"line":390,"column":28}},"50":{"start":{"line":391,"column":10},"end":{"line":391,"column":24}},"51":{"start":{"line":392,"column":10},"end":{"line":392,"column":26}},"52":{"start":{"line":393,"column":10},"end":{"line":393,"column":36}},"53":{"start":{"line":395,"column":8},"end":{"line":395,"column":60}},"54":{"start":{"line":395,"column":18},"end":{"line":395,"column":60}},"55":{"start":{"line":396,"column":8},"end":{"line":396,"column":19}},"56":{"start":{"line":399,"column":6},"end":{"line":409,"column":7}},"57":{"start":{"line":401,"column":8},"end":{"line":405,"column":9}},"58":{"start":{"line":402,"column":10},"end":{"line":404,"column":12}},"59":{"start":{"line":408,"column":8},"end":{"line":408,"column":59}},"60":{"start":{"line":411,"column":4},"end":{"line":411,"column":16}},"61":{"start":{"line":427,"column":2},"end":{"line":465,"column":3}},"62":{"start":{"line":428,"column":4},"end":{"line":464,"column":7}},"63":{"start":{"line":429,"column":6},"end":{"line":434,"column":17}},"64":{"start":{"line":435,"column":6},"end":{"line":462,"column":7}},"65":{"start":{"line":438,"column":8},"end":{"line":449,"column":10}},"66":{"start":{"line":450,"column":8},"end":{"line":450,"column":53}},"67":{"start":{"line":451,"column":8},"end":{"line":460,"column":9}},"68":{"start":{"line":452,"column":10},"end":{"line":459,"column":11}},"69":{"start":{"line":458,"column":12},"end":{"line":458,"column":85}},"70":{"start":{"line":461,"column":8},"end":{"line":461,"column":30}},"71":{"start":{"line":463,"column":6},"end":{"line":463,"column":17}},"72":{"start":{"line":472,"column":2},"end":{"line":474,"column":3}},"73":{"start":{"line":473,"column":4},"end":{"line":473,"column":22}},"74":{"start":{"line":480,"column":2},"end":{"line":482,"column":3}},"75":{"start":{"line":481,"column":4},"end":{"line":481,"column":16}},"76":{"start":{"line":492,"column":2},"end":{"line":496,"column":3}},"77":{"start":{"line":493,"column":4},"end":{"line":495,"column":12}},"78":{"start":{"line":504,"column":2},"end":{"line":515,"column":3}},"79":{"start":{"line":505,"column":4},"end":{"line":506,"column":46}},"80":{"start":{"line":507,"column":4},"end":{"line":509,"column":5}},"81":{"start":{"line":508,"column":6},"end":{"line":508,"column":32}},"82":{"start":{"line":510,"column":4},"end":{"line":510,"column":20}},"83":{"start":{"line":511,"column":4},"end":{"line":514,"column":6}},"84":{"start":{"line":517,"column":2},"end":{"line":532,"column":3}},"85":{"start":{"line":518,"column":4},"end":{"line":520,"column":5}},"86":{"start":{"line":519,"column":6},"end":{"line":519,"column":28}},"87":{"start":{"line":523,"column":4},"end":{"line":531,"column":7}},"88":{"start":{"line":534,"column":2},"end":{"line":536,"column":3}},"89":{"start":{"line":535,"column":4},"end":{"line":535,"column":46}},"90":{"start":{"line":538,"column":2},"end":{"line":544,"column":3}},"91":{"start":{"line":540,"column":4},"end":{"line":540,"column":21}},"92":{"start":{"line":541,"column":4},"end":{"line":541,"column":31}},"93":{"start":{"line":542,"column":4},"end":{"line":542,"column":21}},"94":{"start":{"line":543,"column":4},"end":{"line":543,"column":18}},"95":{"start":{"line":546,"column":2},"end":{"line":564,"column":3}},"96":{"start":{"line":547,"column":4},"end":{"line":551,"column":12}},"97":{"start":{"line":552,"column":4},"end":{"line":562,"column":5}},"98":{"start":{"line":553,"column":6},"end":{"line":553,"column":44}},"99":{"start":{"line":554,"column":6},"end":{"line":561,"column":7}},"100":{"start":{"line":555,"column":8},"end":{"line":555,"column":77}},"101":{"start":{"line":556,"column":8},"end":{"line":556,"column":14}},"102":{"start":{"line":557,"column":13},"end":{"line":561,"column":7}},"103":{"start":{"line":558,"column":8},"end":{"line":558,"column":14}},"104":{"start":{"line":560,"column":8},"end":{"line":560,"column":31}},"105":{"start":{"line":563,"column":4},"end":{"line":563,"column":30}}},"branchMap":{"1":{"line":90,"type":"if","locations":[{"start":{"line":90,"column":8},"end":{"line":90,"column":8}},{"start":{"line":90,"column":8},"end":{"line":90,"column":8}}]},"2":{"line":300,"type":"if","locations":[{"start":{"line":300,"column":6},"end":{"line":300,"column":6}},{"start":{"line":300,"column":6},"end":{"line":300,"column":6}}]},"3":{"line":306,"type":"if","locations":[{"start":{"line":306,"column":11},"end":{"line":306,"column":11}},{"start":{"line":306,"column":11},"end":{"line":306,"column":11}}]},"4":{"line":306,"type":"binary-expr","locations":[{"start":{"line":306,"column":15},"end":{"line":306,"column":29}},{"start":{"line":306,"column":33},"end":{"line":306,"column":73}}]},"5":{"line":321,"type":"cond-expr","locations":[{"start":{"line":322,"column":6},"end":{"line":322,"column":33}},{"start":{"line":323,"column":6},"end":{"line":323,"column":13}}]},"6":{"line":365,"type":"if","locations":[{"start":{"line":365,"column":8},"end":{"line":365,"column":8}},{"start":{"line":365,"column":8},"end":{"line":365,"column":8}}]},"7":{"line":374,"type":"if","locations":[{"start":{"line":374,"column":8},"end":{"line":374,"column":8}},{"start":{"line":374,"column":8},"end":{"line":374,"column":8}}]},"8":{"line":380,"type":"if","locations":[{"start":{"line":380,"column":12},"end":{"line":380,"column":12}},{"start":{"line":380,"column":12},"end":{"line":380,"column":12}}]},"9":{"line":381,"type":"binary-expr","locations":[{"start":{"line":381,"column":14},"end":{"line":381,"column":45}},{"start":{"line":383,"column":14},"end":{"line":383,"column":42}},{"start":{"line":384,"column":14},"end":{"line":384,"column":41}}]},"10":{"line":395,"type":"if","locations":[{"start":{"line":395,"column":8},"end":{"line":395,"column":8}},{"start":{"line":395,"column":8},"end":{"line":395,"column":8}}]},"11":{"line":399,"type":"if","locations":[{"start":{"line":399,"column":6},"end":{"line":399,"column":6}},{"start":{"line":399,"column":6},"end":{"line":399,"column":6}}]},"12":{"line":401,"type":"if","locations":[{"start":{"line":401,"column":8},"end":{"line":401,"column":8}},{"start":{"line":401,"column":8},"end":{"line":401,"column":8}}]},"13":{"line":435,"type":"if","locations":[{"start":{"line":435,"column":6},"end":{"line":435,"column":6}},{"start":{"line":435,"column":6},"end":{"line":435,"column":6}}]},"14":{"line":452,"type":"if","locations":[{"start":{"line":452,"column":10},"end":{"line":452,"column":10}},{"start":{"line":452,"column":10},"end":{"line":452,"column":10}}]},"15":{"line":453,"type":"binary-expr","locations":[{"start":{"line":453,"column":12},"end":{"line":453,"column":43}},{"start":{"line":455,"column":12},"end":{"line":455,"column":40}},{"start":{"line":456,"column":12},"end":{"line":456,"column":52}}]},"16":{"line":493,"type":"cond-expr","locations":[{"start":{"line":494,"column":6},"end":{"line":494,"column":25}},{"start":{"line":495,"column":6},"end":{"line":495,"column":11}}]},"17":{"line":505,"type":"cond-expr","locations":[{"start":{"line":506,"column":10},"end":{"line":506,"column":33}},{"start":{"line":506,"column":36},"end":{"line":506,"column":45}}]},"18":{"line":507,"type":"if","locations":[{"start":{"line":507,"column":4},"end":{"line":507,"column":4}},{"start":{"line":507,"column":4},"end":{"line":507,"column":4}}]},"19":{"line":518,"type":"if","locations":[{"start":{"line":518,"column":4},"end":{"line":518,"column":4}},{"start":{"line":518,"column":4},"end":{"line":518,"column":4}}]},"20":{"line":518,"type":"binary-expr","locations":[{"start":{"line":518,"column":8},"end":{"line":518,"column":12}},{"start":{"line":518,"column":16},"end":{"line":518,"column":41}}]},"21":{"line":523,"type":"cond-expr","locations":[{"start":{"line":523,"column":39},"end":{"line":523,"column":50}},{"start":{"line":523,"column":53},"end":{"line":523,"column":62}}]},"22":{"line":524,"type":"binary-expr","locations":[{"start":{"line":524,"column":18},"end":{"line":524,"column":30}},{"start":{"line":524,"column":34},"end":{"line":524,"column":58}}]},"23":{"line":525,"type":"cond-expr","locations":[{"start":{"line":525,"column":57},"end":{"line":525,"column":71}},{"start":{"line":525,"column":74},"end":{"line":525,"column":84}}]},"24":{"line":526,"type":"cond-expr","locations":[{"start":{"line":526,"column":49},"end":{"line":526,"column":57}},{"start":{"line":526,"column":60},"end":{"line":526,"column":72}}]},"25":{"line":527,"type":"binary-expr","locations":[{"start":{"line":527,"column":18},"end":{"line":527,"column":25}},{"start":{"line":527,"column":29},"end":{"line":527,"column":40}}]},"26":{"line":528,"type":"binary-expr","locations":[{"start":{"line":528,"column":18},"end":{"line":528,"column":28}},{"start":{"line":528,"column":32},"end":{"line":528,"column":76}}]},"27":{"line":528,"type":"binary-expr","locations":[{"start":{"line":528,"column":51},"end":{"line":528,"column":59}},{"start":{"line":528,"column":63},"end":{"line":528,"column":75}}]},"28":{"line":529,"type":"binary-expr","locations":[{"start":{"line":529,"column":18},"end":{"line":529,"column":31}},{"start":{"line":529,"column":35},"end":{"line":529,"column":52}}]},"29":{"line":530,"type":"binary-expr","locations":[{"start":{"line":530,"column":18},"end":{"line":530,"column":29}},{"start":{"line":530,"column":33},"end":{"line":530,"column":48}}]},"30":{"line":554,"type":"if","locations":[{"start":{"line":554,"column":6},"end":{"line":554,"column":6}},{"start":{"line":554,"column":6},"end":{"line":554,"column":6}}]},"31":{"line":557,"type":"if","locations":[{"start":{"line":557,"column":13},"end":{"line":557,"column":13}},{"start":{"line":557,"column":13},"end":{"line":557,"column":13}}]},"32":{"line":557,"type":"binary-expr","locations":[{"start":{"line":557,"column":17},"end":{"line":557,"column":28}},{"start":{"line":557,"column":32},"end":{"line":557,"column":43}}]},"33":{"line":563,"type":"binary-expr","locations":[{"start":{"line":563,"column":18},"end":{"line":563,"column":21}},{"start":{"line":563,"column":25},"end":{"line":563,"column":28}}]}},"code":["/*jslint indent: 2, browser: true, bitwise: true, plusplus: true */","var twemoji = (function (","  /*! Copyright Twitter Inc. and other contributors. Licensed under MIT *//*","    https://github.com/twitter/twemoji/blob/gh-pages/LICENSE","  */","","  // WARNING:   this file is generated automatically via","  //            `node twemoji-generator.js`","  //            please update its `createTwemoji` function","  //            at the bottom of the same file instead.","",") {","  'use strict';","","  /*jshint maxparams:4 */","","  var","    // the exported module object","    twemoji = {","","","    /////////////////////////","    //      properties     //","    /////////////////////////","","      // default assets url, by default will be Twitter Inc. CDN","      base: 'https://twemoji.maxcdn.com/2/',","","      // default assets file extensions, by default '.png'","      ext: '.png',","","      // default assets/folder size, by default \"72x72\"","      // available via Twitter CDN: 72","      size: '72x72',","","      // default class name, by default 'emoji'","      className: 'emoji',","","      // basic utilities / helpers to convert code points","      // to JavaScript surrogates and vice versa","      convert: {","","        /**","         * Given an HEX codepoint, returns UTF16 surrogate pairs.","         *","         * @param   string  generic codepoint, i.e. '1F4A9'","         * @return  string  codepoint transformed into utf16 surrogates pair,","         *          i.e. \\uD83D\\uDCA9","         *","         * @example","         *  twemoji.convert.fromCodePoint('1f1e8');","         *  // \"\\ud83c\\udde8\"","         *","         *  '1f1e8-1f1f3'.split('-').map(twemoji.convert.fromCodePoint).join('')","         *  // \"\\ud83c\\udde8\\ud83c\\uddf3\"","         */","        fromCodePoint: fromCodePoint,","","        /**","         * Given UTF16 surrogate pairs, returns the equivalent HEX codepoint.","         *","         * @param   string  generic utf16 surrogates pair, i.e. \\uD83D\\uDCA9","         * @param   string  optional separator for double code points, default='-'","         * @return  string  utf16 transformed into codepoint, i.e. '1F4A9'","         *","         * @example","         *  twemoji.convert.toCodePoint('\\ud83c\\udde8\\ud83c\\uddf3');","         *  // \"1f1e8-1f1f3\"","         *","         *  twemoji.convert.toCodePoint('\\ud83c\\udde8\\ud83c\\uddf3', '~');","         *  // \"1f1e8~1f1f3\"","         */","        toCodePoint: toCodePoint","      },","","","    /////////////////////////","    //       methods       //","    /////////////////////////","","      /**","       * User first: used to remove missing images","       * preserving the original text intent when","       * a fallback for network problems is desired.","       * Automatically added to Image nodes via DOM","       * It could be recycled for string operations via:","       *  $('img.emoji').on('error', twemoji.onerror)","       */","      onerror: function onerror() {","        if (this.parentNode) {","          this.parentNode.replaceChild(createText(this.alt), this);","        }","      },","","      /**","       * Main method/logic to generate either <img> tags or HTMLImage nodes.","       *  \"emojify\" a generic text or DOM Element.","       *","       * @overloads","       *","       * String replacement for `innerHTML` or server side operations","       *  twemoji.parse(string);","       *  twemoji.parse(string, Function);","       *  twemoji.parse(string, Object);","       *","       * HTMLElement tree parsing for safer operations over existing DOM","       *  twemoji.parse(HTMLElement);","       *  twemoji.parse(HTMLElement, Function);","       *  twemoji.parse(HTMLElement, Object);","       *","       * @param   string|HTMLElement  the source to parse and enrich with emoji.","       *","       *          string              replace emoji matches with <img> tags.","       *                              Mainly used to inject emoji via `innerHTML`","       *                              It does **not** parse the string or validate it,","       *                              it simply replaces found emoji with a tag.","       *                              NOTE: be sure this won't affect security.","       *","       *          HTMLElement         walk through the DOM tree and find emoji","       *                              that are inside **text node only** (nodeType === 3)","       *                              Mainly used to put emoji in already generated DOM","       *                              without compromising surrounding nodes and","       *                              **avoiding** the usage of `innerHTML`.","       *                              NOTE: Using DOM elements instead of strings should","       *                              improve security without compromising too much","       *                              performance compared with a less safe `innerHTML`.","       *","       * @param   Function|Object  [optional]","       *                              either the callback that will be invoked or an object","       *                              with all properties to use per each found emoji.","       *","       *          Function            if specified, this will be invoked per each emoji","       *                              that has been found through the RegExp except","       *                              those follwed by the invariant \\uFE0E (\"as text\").","       *                              Once invoked, parameters will be:","       *","       *                                iconId:string     the lower case HEX code point","       *                                                  i.e. \"1f4a9\"","       *","       *                                options:Object    all info for this parsing operation","       *","       *                                variant:char      the optional \\uFE0F (\"as image\")","       *                                                  variant, in case this info","       *                                                  is anyhow meaningful.","       *                                                  By default this is ignored.","       *","       *                              If such callback will return a falsy value instead","       *                              of a valid `src` to use for the image, nothing will","       *                              actually change for that specific emoji.","       *","       *","       *          Object              if specified, an object containing the following properties","       *","       *            callback   Function  the callback to invoke per each found emoji.","       *            base       string    the base url, by default twemoji.base","       *            ext        string    the image extension, by default twemoji.ext","       *            size       string    the assets size, by default twemoji.size","       *","       * @example","       *","       *  twemoji.parse(\"I \\u2764\\uFE0F emoji!\");","       *  // I <img class=\"emoji\" draggable=\"false\" alt=\"❤️\" src=\"/assets/2764.gif\"> emoji!","       *","       *","       *  twemoji.parse(\"I \\u2764\\uFE0F emoji!\", function(iconId, options) {","       *    return '/assets/' + iconId + '.gif';","       *  });","       *  // I <img class=\"emoji\" draggable=\"false\" alt=\"❤️\" src=\"/assets/2764.gif\"> emoji!","       *","       *","       * twemoji.parse(\"I \\u2764\\uFE0F emoji!\", {","       *   size: 72,","       *   callback: function(iconId, options) {","       *     return '/assets/' + options.size + '/' + iconId + options.ext;","       *   }","       * });","       *  // I <img class=\"emoji\" draggable=\"false\" alt=\"❤️\" src=\"/assets/72x72/2764.png\"> emoji!","       *","       */","      parse: parse,","","      /**","       * Given a string, invokes the callback argument","       *  per each emoji found in such string.","       * This is the most raw version used by","       *  the .parse(string) method itself.","       *","       * @param   string    generic string to parse","       * @param   Function  a generic callback that will be","       *                    invoked to replace the content.","       *                    This calback wil receive standard","       *                    String.prototype.replace(str, callback)","       *                    arguments such:","       *  callback(","       *    rawText,  // the emoji match","       *  );","       *","       *                    and others commonly received via replace.","       */","      replace: replace,","","      /**","       * Simplify string tests against emoji.","       *","       * @param   string  some text that might contain emoji","       * @return  boolean true if any emoji was found, false otherwise.","       *","       * @example","       *","       *  if (twemoji.test(someContent)) {","       *    console.log(\"emoji All The Things!\");","       *  }","       */","      test: test","    },","","    // used to escape HTML special chars in attributes","    escaper = {","      '&': '&amp;',","      '<': '&lt;',","      '>': '&gt;',","      \"'\": '&#39;',","      '\"': '&quot;'","    },","","    // RegExp based on emoji's official Unicode standards","    // http://www.unicode.org/Public/UNIDATA/EmojiSources.txt","    re = /\\ud83d[\\udc68-\\udc69](?:\\ud83c[\\udffb-\\udfff])?\\u200d(?:\\u2695\\ufe0f|\\u2696\\ufe0f|\\u2708\\ufe0f|\\ud83c[\\udf3e\\udf73\\udf93\\udfa4\\udfa8\\udfeb\\udfed]|\\ud83d[\\udcbb\\udcbc\\udd27\\udd2c\\ude80\\ude92])|(?:\\ud83c[\\udfcb\\udfcc]|\\ud83d\\udd75|\\u26f9)(?:\\ufe0f|\\ud83c[\\udffb-\\udfff])\\u200d[\\u2640\\u2642]\\ufe0f|(?:\\ud83c[\\udfc3\\udfc4\\udfca]|\\ud83d[\\udc6e\\udc71\\udc73\\udc77\\udc81\\udc82\\udc86\\udc87\\ude45-\\ude47\\ude4b\\ude4d\\ude4e\\udea3\\udeb4-\\udeb6]|\\ud83e[\\udd26\\udd37-\\udd39\\udd3d\\udd3e])(?:\\ud83c[\\udffb-\\udfff])?\\u200d[\\u2640\\u2642]\\ufe0f|\\ud83d\\udc68\\u200d\\u2764\\ufe0f\\u200d\\ud83d\\udc8b\\u200d\\ud83d\\udc68|\\ud83d\\udc68\\u200d\\ud83d\\udc68\\u200d\\ud83d\\udc66\\u200d\\ud83d\\udc66|\\ud83d\\udc68\\u200d\\ud83d\\udc68\\u200d\\ud83d\\udc67\\u200d\\ud83d[\\udc66\\udc67]|\\ud83d\\udc68\\u200d\\ud83d\\udc69\\u200d\\ud83d\\udc66\\u200d\\ud83d\\udc66|\\ud83d\\udc68\\u200d\\ud83d\\udc69\\u200d\\ud83d\\udc67\\u200d\\ud83d[\\udc66\\udc67]|\\ud83d\\udc69\\u200d\\u2764\\ufe0f\\u200d\\ud83d\\udc8b\\u200d\\ud83d[\\udc68\\udc69]|\\ud83d\\udc69\\u200d\\ud83d\\udc69\\u200d\\ud83d\\udc66\\u200d\\ud83d\\udc66|\\ud83d\\udc69\\u200d\\ud83d\\udc69\\u200d\\ud83d\\udc67\\u200d\\ud83d[\\udc66\\udc67]|\\ud83d\\udc68\\u200d\\u2764\\ufe0f\\u200d\\ud83d\\udc68|\\ud83d\\udc68\\u200d\\ud83d\\udc66\\u200d\\ud83d\\udc66|\\ud83d\\udc68\\u200d\\ud83d\\udc67\\u200d\\ud83d[\\udc66\\udc67]|\\ud83d\\udc68\\u200d\\ud83d\\udc68\\u200d\\ud83d[\\udc66\\udc67]|\\ud83d\\udc68\\u200d\\ud83d\\udc69\\u200d\\ud83d[\\udc66\\udc67]|\\ud83d\\udc69\\u200d\\u2764\\ufe0f\\u200d\\ud83d[\\udc68\\udc69]|\\ud83d\\udc69\\u200d\\ud83d\\udc66\\u200d\\ud83d\\udc66|\\ud83d\\udc69\\u200d\\ud83d\\udc67\\u200d\\ud83d[\\udc66\\udc67]|\\ud83d\\udc69\\u200d\\ud83d\\udc69\\u200d\\ud83d[\\udc66\\udc67]|\\ud83c\\udff3\\ufe0f\\u200d\\ud83c\\udf08|\\ud83c\\udff4\\u200d\\u2620\\ufe0f|\\ud83d\\udc41\\u200d\\ud83d\\udde8|\\ud83d\\udc68\\u200d\\ud83d[\\udc66\\udc67]|\\ud83d\\udc69\\u200d\\ud83d[\\udc66\\udc67]|\\ud83d\\udc6f\\u200d\\u2640\\ufe0f|\\ud83d\\udc6f\\u200d\\u2642\\ufe0f|\\ud83e\\udd3c\\u200d\\u2640\\ufe0f|\\ud83e\\udd3c\\u200d\\u2642\\ufe0f|(?:[\\u0023\\u002a\\u0030-\\u0039])\\ufe0f?\\u20e3|(?:(?:\\ud83c[\\udfcb\\udfcc]|\\ud83d[\\udd74\\udd75\\udd90]|[\\u261d\\u26f7\\u26f9\\u270c\\u270d])(?:\\ufe0f|(?!\\ufe0e))|\\ud83c[\\udf85\\udfc2-\\udfc4\\udfc7\\udfca]|\\ud83d[\\udc42\\udc43\\udc46-\\udc50\\udc66-\\udc69\\udc6e\\udc70-\\udc78\\udc7c\\udc81-\\udc83\\udc85-\\udc87\\udcaa\\udd7a\\udd95\\udd96\\ude45-\\ude47\\ude4b-\\ude4f\\udea3\\udeb4-\\udeb6\\udec0\\udecc]|\\ud83e[\\udd18-\\udd1c\\udd1e\\udd26\\udd30\\udd33-\\udd39\\udd3d\\udd3e]|[\\u270a\\u270b])(?:\\ud83c[\\udffb-\\udfff]|)|\\ud83c\\udde6\\ud83c[\\udde8-\\uddec\\uddee\\uddf1\\uddf2\\uddf4\\uddf6-\\uddfa\\uddfc\\uddfd\\uddff]|\\ud83c\\udde7\\ud83c[\\udde6\\udde7\\udde9-\\uddef\\uddf1-\\uddf4\\uddf6-\\uddf9\\uddfb\\uddfc\\uddfe\\uddff]|\\ud83c\\udde8\\ud83c[\\udde6\\udde8\\udde9\\uddeb-\\uddee\\uddf0-\\uddf5\\uddf7\\uddfa-\\uddff]|\\ud83c\\udde9\\ud83c[\\uddea\\uddec\\uddef\\uddf0\\uddf2\\uddf4\\uddff]|\\ud83c\\uddea\\ud83c[\\udde6\\udde8\\uddea\\uddec\\udded\\uddf7-\\uddfa]|\\ud83c\\uddeb\\ud83c[\\uddee-\\uddf0\\uddf2\\uddf4\\uddf7]|\\ud83c\\uddec\\ud83c[\\udde6\\udde7\\udde9-\\uddee\\uddf1-\\uddf3\\uddf5-\\uddfa\\uddfc\\uddfe]|\\ud83c\\udded\\ud83c[\\uddf0\\uddf2\\uddf3\\uddf7\\uddf9\\uddfa]|\\ud83c\\uddee\\ud83c[\\udde8-\\uddea\\uddf1-\\uddf4\\uddf6-\\uddf9]|\\ud83c\\uddef\\ud83c[\\uddea\\uddf2\\uddf4\\uddf5]|\\ud83c\\uddf0\\ud83c[\\uddea\\uddec-\\uddee\\uddf2\\uddf3\\uddf5\\uddf7\\uddfc\\uddfe\\uddff]|\\ud83c\\uddf1\\ud83c[\\udde6-\\udde8\\uddee\\uddf0\\uddf7-\\uddfb\\uddfe]|\\ud83c\\uddf2\\ud83c[\\udde6\\udde8-\\udded\\uddf0-\\uddff]|\\ud83c\\uddf3\\ud83c[\\udde6\\udde8\\uddea-\\uddec\\uddee\\uddf1\\uddf4\\uddf5\\uddf7\\uddfa\\uddff]|\\ud83c\\uddf4\\ud83c\\uddf2|\\ud83c\\uddf5\\ud83c[\\udde6\\uddea-\\udded\\uddf0-\\uddf3\\uddf7-\\uddf9\\uddfc\\uddfe]|\\ud83c\\uddf6\\ud83c\\udde6|\\ud83c\\uddf7\\ud83c[\\uddea\\uddf4\\uddf8\\uddfa\\uddfc]|\\ud83c\\uddf8\\ud83c[\\udde6-\\uddea\\uddec-\\uddf4\\uddf7-\\uddf9\\uddfb\\uddfd-\\uddff]|\\ud83c\\uddf9\\ud83c[\\udde6\\udde8\\udde9\\uddeb-\\udded\\uddef-\\uddf4\\uddf7\\uddf9\\uddfb\\uddfc\\uddff]|\\ud83c\\uddfa\\ud83c[\\udde6\\uddec\\uddf2\\uddf3\\uddf8\\uddfe\\uddff]|\\ud83c\\uddfb\\ud83c[\\udde6\\udde8\\uddea\\uddec\\uddee\\uddf3\\uddfa]|\\ud83c\\uddfc\\ud83c[\\uddeb\\uddf8]|\\ud83c\\uddfd\\ud83c\\uddf0|\\ud83c\\uddfe\\ud83c[\\uddea\\uddf9]|\\ud83c\\uddff\\ud83c[\\udde6\\uddf2\\uddfc]|\\ud800\\udc00|\\ud83c[\\udccf\\udd8e\\udd91-\\udd9a\\udde6-\\uddff\\ude01\\ude32-\\ude36\\ude38-\\ude3a\\ude50\\ude51\\udf00-\\udf20\\udf2d-\\udf35\\udf37-\\udf7c\\udf7e-\\udf84\\udf86-\\udf93\\udfa0-\\udfc1\\udfc5\\udfc6\\udfc8\\udfc9\\udfcf-\\udfd3\\udfe0-\\udff0\\udff4\\udff8-\\udfff]|\\ud83d[\\udc00-\\udc3e\\udc40\\udc44\\udc45\\udc51-\\udc65\\udc6a-\\udc6d\\udc6f\\udc79-\\udc7b\\udc7d-\\udc80\\udc84\\udc88-\\udca9\\udcab-\\udcfc\\udcff-\\udd3d\\udd4b-\\udd4e\\udd50-\\udd67\\udda4\\uddfb-\\ude44\\ude48-\\ude4a\\ude80-\\udea2\\udea4-\\udeb3\\udeb7-\\udebf\\udec1-\\udec5\\uded0-\\uded2\\udeeb\\udeec\\udef4-\\udef6]|\\ud83e[\\udd10-\\udd17\\udd1d\\udd20-\\udd25\\udd27\\udd3a\\udd3c\\udd40-\\udd45\\udd47-\\udd4b\\udd50-\\udd5e\\udd80-\\udd91\\uddc0]|[\\u23e9-\\u23ec\\u23f0\\u23f3\\u2640\\u2642\\u2695\\u26ce\\u2705\\u2728\\u274c\\u274e\\u2753-\\u2755\\u2795-\\u2797\\u27b0\\u27bf\\ue50a]|(?:\\ud83c[\\udc04\\udd70\\udd71\\udd7e\\udd7f\\ude02\\ude1a\\ude2f\\ude37\\udf21\\udf24-\\udf2c\\udf36\\udf7d\\udf96\\udf97\\udf99-\\udf9b\\udf9e\\udf9f\\udfcd\\udfce\\udfd4-\\udfdf\\udff3\\udff5\\udff7]|\\ud83d[\\udc3f\\udc41\\udcfd\\udd49\\udd4a\\udd6f\\udd70\\udd73\\udd76-\\udd79\\udd87\\udd8a-\\udd8d\\udda5\\udda8\\uddb1\\uddb2\\uddbc\\uddc2-\\uddc4\\uddd1-\\uddd3\\udddc-\\uddde\\udde1\\udde3\\udde8\\uddef\\uddf3\\uddfa\\udecb\\udecd-\\udecf\\udee0-\\udee5\\udee9\\udef0\\udef3]|[\\u00a9\\u00ae\\u203c\\u2049\\u2122\\u2139\\u2194-\\u2199\\u21a9\\u21aa\\u231a\\u231b\\u2328\\u23cf\\u23ed-\\u23ef\\u23f1\\u23f2\\u23f8-\\u23fa\\u24c2\\u25aa\\u25ab\\u25b6\\u25c0\\u25fb-\\u25fe\\u2600-\\u2604\\u260e\\u2611\\u2614\\u2615\\u2618\\u2620\\u2622\\u2623\\u2626\\u262a\\u262e\\u262f\\u2638-\\u263a\\u2648-\\u2653\\u2660\\u2663\\u2665\\u2666\\u2668\\u267b\\u267f\\u2692-\\u2694\\u2696\\u2697\\u2699\\u269b\\u269c\\u26a0\\u26a1\\u26aa\\u26ab\\u26b0\\u26b1\\u26bd\\u26be\\u26c4\\u26c5\\u26c8\\u26cf\\u26d1\\u26d3\\u26d4\\u26e9\\u26ea\\u26f0-\\u26f5\\u26f8\\u26fa\\u26fd\\u2702\\u2708\\u2709\\u270f\\u2712\\u2714\\u2716\\u271d\\u2721\\u2733\\u2734\\u2744\\u2747\\u2757\\u2763\\u2764\\u27a1\\u2934\\u2935\\u2b05-\\u2b07\\u2b1b\\u2b1c\\u2b50\\u2b55\\u3030\\u303d\\u3297\\u3299])(?:\\ufe0f|(?!\\ufe0e))/g,","","    // avoid runtime RegExp creation for not so smart,","    // not JIT based, and old browsers / engines","    UFE0Fg = /\\uFE0F/g,","","    // avoid using a string literal like '\\u200D' here because minifiers expand it inline","    U200D = String.fromCharCode(0x200D),","","    // used to find HTML special chars in attributes","    rescaper = /[&<>'\"]/g,","","    // nodes with type 1 which should **not** be parsed (including lower case svg)","    shouldntBeParsed = /IFRAME|NOFRAMES|NOSCRIPT|SCRIPT|SELECT|STYLE|TEXTAREA|[a-z]/,","","    // just a private shortcut","    fromCharCode = String.fromCharCode;","","  return twemoji;","","","  /////////////////////////","  //  private functions  //","  //     declaration     //","  /////////////////////////","","  /**","   * Shortcut to create text nodes","   * @param   string  text used to create DOM text node","   * @return  Node  a DOM node with that text","   */","  function createText(text) {","    return document.createTextNode(text);","  }","","  /**","   * Utility function to escape html attribute text","   * @param   string  text use in HTML attribute","   * @return  string  text encoded to use in HTML attribute","   */","  function escapeHTML(s) {","    return s.replace(rescaper, replacer);","  }","","  /**","   * Default callback used to generate emoji src","   *  based on Twitter CDN","   * @param   string    the emoji codepoint string","   * @param   string    the default size to use, i.e. \"36x36\"","   * @return  string    the image source to use","   */","  function defaultImageSrcGenerator(icon, options) {","    return ''.concat(options.base, options.size, '/', icon, options.ext);","  }","","  /**","   * Given a generic DOM nodeType 1, walk through all children","   * and store every nodeType 3 (#text) found in the tree.","   * @param   Element a DOM Element with probably some text in it","   * @param   Array the list of previously discovered text nodes","   * @return  Array same list with new discovered nodes, if any","   */","  function grabAllTextNodes(node, allText) {","    var","      childNodes = node.childNodes,","      length = childNodes.length,","      subnode,","      nodeType;","    while (length--) {","      subnode = childNodes[length];","      nodeType = subnode.nodeType;","      // parse emoji only in text nodes","      if (nodeType === 3) {","        // collect them to process emoji later","        allText.push(subnode);","      }","      // ignore all nodes that are not type 1 or that","      // should not be parsed as script, style, and others","      else if (nodeType === 1 && !shouldntBeParsed.test(subnode.nodeName)) {","        grabAllTextNodes(subnode, allText);","      }","    }","    return allText;","  }","","  /**","   * Used to both remove the possible variant","   *  and to convert utf16 into code points.","   *  If there is a zero-width-joiner (U+200D), leave the variants in.","   * @param   string    the raw text of the emoji match","   */","  function grabTheRightIcon(rawText) {","    // if variant is present as \\uFE0F","    return toCodePoint(rawText.indexOf(U200D) < 0 ?","      rawText.replace(UFE0Fg, '') :","      rawText","    );","  }","","  /**","   * DOM version of the same logic / parser:","   *  emojify all found sub-text nodes placing images node instead.","   * @param   Element   generic DOM node with some text in some child node","   * @param   Object    options  containing info about how to parse","    *","    *            .callback   Function  the callback to invoke per each found emoji.","    *            .base       string    the base url, by default twemoji.base","    *            .ext        string    the image extension, by default twemoji.ext","    *            .size       string    the assets size, by default twemoji.size","    *","   * @return  Element same generic node with emoji in place, if any.","   */","  function parseNode(node, options) {","    var","      allText = grabAllTextNodes(node, []),","      length = allText.length,","      attrib,","      attrname,","      modified,","      fragment,","      subnode,","      text,","      match,","      i,","      index,","      img,","      rawText,","      iconId,","      src;","    while (length--) {","      modified = false;","      fragment = document.createDocumentFragment();","      subnode = allText[length];","      text = subnode.nodeValue;","      i = 0;","      while ((match = re.exec(text))) {","        index = match.index;","        if (index !== i) {","          fragment.appendChild(","            createText(text.slice(i, index))","          );","        }","        rawText = match[0];","        iconId = grabTheRightIcon(rawText);","        i = index + rawText.length;","        src = options.callback(iconId, options);","        if (src) {","          img = new Image();","          img.onerror = options.onerror;","          img.setAttribute('draggable', 'false');","          attrib = options.attributes(rawText, iconId);","          for (attrname in attrib) {","            if (","              attrib.hasOwnProperty(attrname) &&","              // don't allow any handlers to be set + don't allow overrides","              attrname.indexOf('on') !== 0 &&","              !img.hasAttribute(attrname)","            ) {","              img.setAttribute(attrname, attrib[attrname]);","            }","          }","          img.className = options.className;","          img.alt = rawText;","          img.src = src;","          modified = true;","          fragment.appendChild(img);","        }","        if (!img) fragment.appendChild(createText(rawText));","        img = null;","      }","      // is there actually anything to replace in here ?","      if (modified) {","        // any text left to be added ?","        if (i < text.length) {","          fragment.appendChild(","            createText(text.slice(i))","          );","        }","        // replace the text node only, leave intact","        // anything else surrounding such text","        subnode.parentNode.replaceChild(fragment, subnode);","      }","    }","    return node;","  }","","  /**","   * String/HTML version of the same logic / parser:","   *  emojify a generic text placing images tags instead of surrogates pair.","   * @param   string    generic string with possibly some emoji in it","   * @param   Object    options  containing info about how to parse","   *","   *            .callback   Function  the callback to invoke per each found emoji.","   *            .base       string    the base url, by default twemoji.base","   *            .ext        string    the image extension, by default twemoji.ext","   *            .size       string    the assets size, by default twemoji.size","   *","   * @return  the string with <img tags> replacing all found and parsed emoji","   */","  function parseString(str, options) {","    return replace(str, function (rawText) {","      var","        ret = rawText,","        iconId = grabTheRightIcon(rawText),","        src = options.callback(iconId, options),","        attrib,","        attrname;","      if (src) {","        // recycle the match string replacing the emoji","        // with its image counter part","        ret = '<img '.concat(","          'class=\"', options.className, '\" ',","          'draggable=\"false\" ',","          // needs to preserve user original intent","          // when variants should be copied and pasted too","          'alt=\"',","          rawText,","          '\"',","          ' src=\"',","          src,","          '\"'","        );","        attrib = options.attributes(rawText, iconId);","        for (attrname in attrib) {","          if (","            attrib.hasOwnProperty(attrname) &&","            // don't allow any handlers to be set + don't allow overrides","            attrname.indexOf('on') !== 0 &&","            ret.indexOf(' ' + attrname + '=') === -1","          ) {","            ret = ret.concat(' ', attrname, '=\"', escapeHTML(attrib[attrname]), '\"');","          }","        }","        ret = ret.concat('>');","      }","      return ret;","    });","  }","","  /**","   * Function used to actually replace HTML special chars","   * @param   string  HTML special char","   * @return  string  encoded HTML special char","   */","  function replacer(m) {","    return escaper[m];","  }","","  /**","   * Default options.attribute callback","   * @return  null","   */","  function returnNull() {","    return null;","  }","","  /**","   * Given a generic value, creates its squared counterpart if it's a number.","   *  As example, number 36 will return '36x36'.","   * @param   any     a generic value.","   * @return  any     a string representing asset size, i.e. \"36x36\"","   *                  only in case the value was a number.","   *                  Returns initial value otherwise.","   */","  function toSizeSquaredAsset(value) {","    return typeof value === 'number' ?","      value + 'x' + value :","      value;","  }","","","  /////////////////////////","  //  exported functions //","  //     declaration     //","  /////////////////////////","","  function fromCodePoint(codepoint) {","    var code = typeof codepoint === 'string' ?","          parseInt(codepoint, 16) : codepoint;","    if (code < 0x10000) {","      return fromCharCode(code);","    }","    code -= 0x10000;","    return fromCharCode(","      0xD800 + (code >> 10),","      0xDC00 + (code & 0x3FF)","    );","  }","","  function parse(what, how) {","    if (!how || typeof how === 'function') {","      how = {callback: how};","    }","    // if first argument is string, inject html <img> tags","    // otherwise use the DOM tree and parse text nodes only","    return (typeof what === 'string' ? parseString : parseNode)(what, {","      callback:   how.callback || defaultImageSrcGenerator,","      attributes: typeof how.attributes === 'function' ? how.attributes : returnNull,","      base:       typeof how.base === 'string' ? how.base : twemoji.base,","      ext:        how.ext || twemoji.ext,","      size:       how.folder || toSizeSquaredAsset(how.size || twemoji.size),","      className:  how.className || twemoji.className,","      onerror:    how.onerror || twemoji.onerror","    });","  }","","  function replace(text, callback) {","    return String(text).replace(re, callback);","  }","","  function test(text) {","    // IE6 needs a reset before too","    re.lastIndex = 0;","    var result = re.test(text);","    re.lastIndex = 0;","    return result;","  }","","  function toCodePoint(unicodeSurrogates, sep) {","    var","      r = [],","      c = 0,","      p = 0,","      i = 0;","    while (i < unicodeSurrogates.length) {","      c = unicodeSurrogates.charCodeAt(i++);","      if (p) {","        r.push((0x10000 + ((p - 0xD800) << 10) + (c - 0xDC00)).toString(16));","        p = 0;","      } else if (0xD800 <= c && c <= 0xDBFF) {","        p = c;","      } else {","        r.push(c.toString(16));","      }","    }","    return r.join(sep || '-');","  }","","}());"],"l":{"2":1,"17":1,"90":0,"91":0,"246":1,"259":1,"260":0,"268":1,"269":0,"279":1,"280":0,"290":1,"291":0,"296":0,"297":0,"298":0,"300":0,"302":0,"306":0,"307":0,"310":0,"319":1,"321":0,"340":1,"341":0,"357":0,"358":0,"359":0,"360":0,"361":0,"362":0,"363":0,"364":0,"365":0,"366":0,"370":0,"371":0,"372":0,"373":0,"374":0,"375":0,"376":0,"377":0,"378":0,"379":0,"380":0,"386":0,"389":0,"390":0,"391":0,"392":0,"393":0,"395":0,"396":0,"399":0,"401":0,"402":0,"408":0,"411":0,"427":1,"428":0,"429":0,"435":0,"438":0,"450":0,"451":0,"452":0,"458":0,"461":0,"463":0,"472":1,"473":0,"480":1,"481":0,"492":1,"493":0,"504":1,"505":0,"507":0,"508":0,"510":0,"511":0,"517":1,"518":0,"519":0,"523":0,"534":1,"535":0,"538":1,"540":0,"541":0,"542":0,"543":0,"546":1,"547":0,"552":0,"553":0,"554":0,"555":0,"556":0,"557":0,"558":0,"560":0,"563":0}}}